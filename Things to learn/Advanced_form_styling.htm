




<!DOCTYPE html>
<html lang="en" dir="ltr">
<head prefix="og: http://ogp.me/ns#">
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=Edge">
  <script>(function(d) { d.className = d.className.replace(/\bno-js/, ''); })(document.documentElement);</script>
  <title>Advanced form styling - Learn web development | MDN</title>

  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="robots" content="index, follow">

  
<link rel="preload" href="/static/fonts/locales/ZillaSlab-Regular.subset.bbc33fb47cf6.woff2" as="font" type="font/woff2"
    crossorigin />
<link rel="preload" href="/static/fonts/locales/ZillaSlab-Bold.subset.e96c15f68c68.woff2" as="font" type="font/woff2"
    crossorigin />

  <link rel="home" href="/en-US/">
  <link rel="license" href="#license">

  <link href="/static/build/styles/react-header.b8f80567be6b.css" rel="stylesheet" type="text/css" />
<link href="/static/build/styles/auth-modal.be43f0f58a73.css" rel="stylesheet" type="text/css" />
<link href="/static/build/styles/react-mdn.379d60a331ca.css" rel="stylesheet" type="text/css" />
<link href="/static/build/styles/subscriptions.6fc80696f1c5.css" rel="stylesheet" type="text/css" />

  <link href="/static/build/styles/prism.a6f275e5032b.css" rel="stylesheet" type="text/css" />

  
<style>
    @font-face {
        font-family: zillaslab;
        font-display: swap;
        src: url(/static/fonts/locales/ZillaSlab-Regular.subset.bbc33fb47cf6.woff2) format('woff2'),
             url(/static/fonts/locales/ZillaSlab-Regular.subset.0357f12613a7.woff) format('woff');
        font-weight: normal;
        font-style: normal;
    }

    @font-face {
        font-family: zillaslab;
        font-display: swap;
        src: url(/static/fonts/locales/ZillaSlab-Bold.subset.e96c15f68c68.woff2) format('woff2'),
             url(/static/fonts/locales/ZillaSlab-Bold.subset.da0ccde4ca4a.woff) format('woff');
        font-weight: bold;
        font-style: normal;
    }
</style>


  
<script>
    // Mozilla DNT Helper
    /* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/. */ if(typeof Mozilla==='undefined'){var Mozilla={}}Mozilla.dntEnabled=function(dnt,ua){'use strict';var dntStatus=dnt||navigator.doNotTrack||window.doNotTrack||navigator.msDoNotTrack;var userAgent=ua||navigator.userAgent;var anomalousWinVersions=['Windows NT 6.1','Windows NT 6.2','Windows NT 6.3'];var fxMatch=userAgent.match(/Firefox\/(\d+)/);var ieRegEx=/MSIE|Trident/i;var isIE=ieRegEx.test(userAgent);var platform=userAgent.match(/Windows.+?(?=;)/g);if(isIE&&typeof Array.prototype.indexOf!=='function'){return false}else if(fxMatch&&parseInt(fxMatch[1],10)<32){dntStatus='Unspecified'}else if(isIE&&platform&&anomalousWinVersions.indexOf(platform.toString())!==-1){dntStatus='Unspecified'}else{dntStatus={'0':'Disabled','1':'Enabled'}[dntStatus]||'Unspecified'}return dntStatus==='Enabled'?true:false};
    // only load GA if DNT is not enabled
    if (Mozilla && !Mozilla.dntEnabled()) {
        window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
        ga('create', 'UA-36116321-5', 'mozilla.org');
        ga('set', 'anonymizeIp', true);
    }
</script>
<script async src='https://www.google-analytics.com/analytics.js'></script>


  <script>
LUX=(function(){var a=("undefined"!==typeof(LUX)&&"undefined"!==typeof(LUX.gaMarks)?LUX.gaMarks:[]);var d=("undefined"!==typeof(LUX)&&"undefined"!==typeof(LUX.gaMeasures)?LUX.gaMeasures:[]);var j="LUX_start";var k=window.performance;var l=("undefined"!==typeof(LUX)&&LUX.ns?LUX.ns:(Date.now?Date.now():+(new Date())));if(k&&k.timing&&k.timing.navigationStart){l=k.timing.navigationStart}function f(){if(k&&k.now){return k.now()}var o=Date.now?Date.now():+(new Date());return o-l}function b(n){if(k){if(k.mark){return k.mark(n)}else{if(k.webkitMark){return k.webkitMark(n)}}}a.push({name:n,entryType:"mark",startTime:f(),duration:0});return}function m(p,t,n){if("undefined"===typeof(t)&&h(j)){t=j}if(k){if(k.measure){if(t){if(n){return k.measure(p,t,n)}else{return k.measure(p,t)}}else{return k.measure(p)}}else{if(k.webkitMeasure){return k.webkitMeasure(p,t,n)}}}var r=0,o=f();if(t){var s=h(t);if(s){r=s.startTime}else{if(k&&k.timing&&k.timing[t]){r=k.timing[t]-k.timing.navigationStart}else{return}}}if(n){var q=h(n);if(q){o=q.startTime}else{if(k&&k.timing&&k.timing[n]){o=k.timing[n]-k.timing.navigationStart}else{return}}}d.push({name:p,entryType:"measure",startTime:r,duration:(o-r)});return}function h(n){return c(n,g())}function c(p,o){for(i=o.length-1;i>=0;i--){var n=o[i];if(p===n.name){return n}}return undefined}function g(){if(k){if(k.getEntriesByType){return k.getEntriesByType("mark")}else{if(k.webkitGetEntriesByType){return k.webkitGetEntriesByType("mark")}}}return a}return{mark:b,measure:m,gaMarks:a,gaMeasures:d}})();LUX.ns=(Date.now?Date.now():+(new Date()));LUX.ac=[];LUX.cmd=function(a){LUX.ac.push(a)};LUX.init=function(){LUX.cmd(["init"])};LUX.send=function(){LUX.cmd(["send"])};LUX.addData=function(a,b){LUX.cmd(["addData",a,b])};LUX_ae=[];window.addEventListener("error",function(a){LUX_ae.push(a)});LUX_al=[];if("function"===typeof(PerformanceObserver)){var LongTaskObserver=new PerformanceObserver(function(c){var b=c.getEntries();for(var a=0;a<b.length;a++){var d=b[a];LUX_al.push(d)}});try{LongTaskObserver.observe({entryTypes:["longtask"],buffered:true})}catch(e){}};
</script>
<script src="https://cdn.speedcurve.com/js/lux.js?id=108906238" async defer crossorigin="anonymous"></script>


  <script>
  window.fetch || document.write('<script src="/static/build/js/fetch-polyfill.63fdc379c7eb.js"><\/script>');
</script>
<script>
  // Only include the fat polyfill for browsers that seem to not have
  // certain JS features. E.g. Firefox 38.
  Array.prototype.includes || document.write('<script src="/static/build/js/js-polyfill.6f2e22100487.js"><\/script>');
</script>

  <script async type="text/javascript" src="/static/build/js/perf.654b849a6fd9.js" charset="utf-8"></script>

  <!-- common social tags -->
  
  <meta property="og:type" content="website">
  <meta property="og:image" content="https://developer.mozilla.org/static/img/opengraph-logo.72382e605ce3.png">
  <meta property="og:site_name" content="MDN Web Docs">
  <meta name="twitter:card" content="summary">
  <meta name="twitter:image" content="https://developer.mozilla.org/static/img/opengraph-logo.72382e605ce3.png">
  <meta name="twitter:site" content="@MozDevNet">
  <meta name="twitter:creator" content="@MozDevNet">
  <link rel="search" type="application/opensearchdescription+xml" href="https://developer.mozilla.org/en-US/search/xml" title="MDN Web Docs">

  <!-- third-generation iPad with high-resolution Retina display: -->
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="/static/img/favicon144.e7e21ca263ca.png">
  <!-- iPhone with high-resolution Retina display: -->
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="/static/img/favicon114.d526f38b09c5.png">
  <!-- first- and second-generation iPad: -->
  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="/static/img/favicon72.cc65d1d762a0.png">
  <!-- non-Retina iPhone, iPod Touch, and Android 2.1+ devices: -->
  <link rel="apple-touch-icon-precomposed" href="/static/img/favicon57.de33179910ae.png">
  <!-- basic favicon -->
  <link rel="shortcut icon" href="/static/img/favicon32.7f3da72dcea1.png">

  <link href="/static/build/styles/banners.92084d28db45.css" rel="stylesheet" type="text/css" />



<link href="/static/build/styles/mdn-subscriptions.dbb82432d74c.css" rel="stylesheet" type="text/css" />

  <link rel="preconnect" href="https://interactive-examples.mdn.mozilla.net" pr="0.75" />

  <link rel="canonical" href="https://developer.mozilla.org/en-US/docs/Learn/Forms/Advanced_form_styling" >

  
  <link rel="alternate" hreflang="en" href="https://developer.mozilla.org/en-US/docs/Learn/Forms/Advanced_form_styling" title="Advanced form styling">
  
    <link rel="alternate" hreflang="fr" href="https://developer.mozilla.org/fr/docs/Web/Guide/HTML/Formulaires/Advanced_styling_for_HTML_forms" title="Composition avancée des formulaires HTML">
  
    <link rel="alternate" hreflang="ja" href="https://developer.mozilla.org/ja/docs/Learn/HTML/Forms/Advanced_styling_for_HTML_forms" title="HTML フォームへの高度なスタイル設定">
  
    <link rel="alternate" hreflang="nl" href="https://developer.mozilla.org/nl/docs/Learn/HTML/Forms/Geavanceerde_styling_van_HTML-formulieren" title="Geavanceerde styling van HTML-formulieren">
  
    <link rel="alternate" hreflang="zh" href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Forms/Advanced_styling_for_HTML_forms" title="高级设计 HTML 表单">
  

  <!-- document-specific social tags -->
  <meta property="og:title" content="Advanced form styling">
  <meta property="og:url" content="https://developer.mozilla.org/en-US/docs/Learn/Forms/Advanced_form_styling">
  <meta name="twitter:url" content="https://developer.mozilla.org/en-US/docs/Learn/Forms/Advanced_form_styling">
  <meta name="twitter:title" content="Advanced form styling">
  
  <meta property="og:description" content="While there are still difficulties using CSS with HTML forms, there are ways to get around many of the problems. There are no clean, universal solutions, but modern browsers offer new possibilities. For now, the best solution is to learn more about the way the different browsers support CSS when applied to HTML form controls.">
  <meta name="description" content="While there are still difficulties using CSS with HTML forms, there are ways to get around many of the problems. There are no clean, universal solutions, but modern browsers offer new possibilities. For now, the best solution is to learn more about the way the different browsers support CSS when applied to HTML form controls.">
  <meta name="twitter:description" content="While there are still difficulties using CSS with HTML forms, there are ways to get around many of the problems. There are no clean, universal solutions, but modern browsers offer new possibilities. For now, the best solution is to learn more about the way the different browsers support CSS when applied to HTML form controls.">
  

  
    <link href="/static/build/styles/print.ca192a439743.css" rel="stylesheet" type="text/css" media="print" />
  
</head>
<body>
  <script>
    // make sure global mdn object exists
    var mdn = window.mdn || {};

    (function(win) {
        'use strict';

        win.mdn.features = {};
        win.mdn.stripePublicKey = 'pk_live_GZl4tCi8J5mWhKbJeRey4DSy';
        win.mdn.contributionSupportEmail = 'mdn-support@mozilla.com';

        win.mdn.siteUrl = 'https://developer.mozilla.org';
        win.mdn.wikiSiteUrl = 'https://wiki.developer.mozilla.org';
        win.mdn.staticPath = '/static/';
        win.mdn.wiki = {
            autosuggestTitleUrl: '/en-US/docs/get-documents'
        };

        win.mdn.notifications = [];

        

        // interactive editor config
        win.mdn.interactiveEditor = {
            siteUrl: "https://developer.mozilla.org",
            editorUrl: "https://interactive-examples.mdn.mozilla.net"
        };
        win.mdn.langCookieName = "django_language";

    })(this);
</script>

  

  <div id="react-container" data-component-name="SPA"><div class="loading-bar"></div><ul id="nav-access" data-testid="a11y-nav"><li><a id="skip-main" href="#content">Skip to main content</a></li><li><a id="skip-language" href="#language">Select language</a></li><li><a id="skip-search" href="#main-q">Skip to search</a></li></ul><header class="page-header" data-testid="header"><a href="/en-US/" class="logo" aria-label="MDN Web Docs"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 219 48" role="img"><path d="M49.752 30.824h59.917v17.132H49.75zm57.23 12.3c-.103.03-.21.048-.316.05-.338 0-.514-.15-.514-.582v-3.256c0-1.71-1.352-2.543-2.976-2.543a7.206 7.206 0 00-3.21.676l-.29 1.724 1.71.182.245-.842a2.338 2.338 0 011.147-.216c1.214 0 1.23.913 1.23 1.69v.234c-.407-.048-.818-.07-1.23-.068-1.71 0-3.49.433-3.49 2.276 0 1.563 1.23 2.144 2.31 2.144a2.7 2.7 0 002.41-1.494c.018.88.77 1.563 1.648 1.494a2.89 2.89 0 001.353-.338zm-4.604-.05a.787.787 0 01-.88-.867c0-.815.677-1.015 1.432-1.015.36.008.722.04 1.078.098-.05 1.235-.852 1.783-1.63 1.783zM97.388 33l-3.24 11.433h2.11L99.5 33.002zm-4.353 0l-3.24 11.433h2.11L95.145 33zm-6.89 6.645h2.243V36.94h-2.242zm0 4.802h2.243v-2.706h-2.242zm-3.617-1.64H80.1l4.156-4.736-.166-1.13h-6.58l-.268 2.63 1.546.164.338-1.163h2.343l-4.123 4.734.216 1.13h6.544l.467-2.63-1.69-.164zM72.143 36.79c-2.706 0-4.02 1.812-4.02 4.004 0 2.394 1.595 3.804 3.905 3.804 2.394 0 4.122-1.51 4.122-3.905-.003-2.093-1.32-3.906-4.01-3.906zm-.054 6.154c-1.165 0-1.763-.997-1.763-2.292 0-1.414.676-2.23 1.778-2.23 1.015 0 1.83.677 1.83 2.196 0 1.438-.73 2.327-1.846 2.327zm-5.906-3.564c0-1.78-1.224-2.594-2.577-2.594a2.51 2.51 0 00-2.44 1.612c-.367-1.1-1.364-1.613-2.443-1.613a2.48 2.48 0 00-2.276 1.278v-1.13h-3.14v1.63h.996v4.24h-.997v1.63h4.572v-1.63h-1.432V40.2c0-1.048.433-1.78 1.448-1.78.845 0 1.278.502 1.278 1.797v4.224h3.14v-1.63h-.996v-2.612c0-1.048.433-1.78 1.447-1.78.846 0 1.278.502 1.278 1.797v4.214h3.142V42.8h-.998zm78.791-22.39h-6.29c.23-1.935 1.16-3.558 3.274-3.558 2.245 0 3.2 1.857 3.016 3.558zM218.952 0v29.137h-169.2V0zM71.706 6.885h-3.85L61.51 20.01h-.104L54.882 6.884h-3.84v1.65h2.19V21.98H51.12v1.65h5.927v-1.65h-2.012V11.24h.1l5.75 11.553H61.9l5.62-11.474h.105v10.66h-1.962v1.65h5.942v-1.65h-2.09V8.536h2.19zm9.993 16.76c5.285 0 8.484-3.48 8.484-8.42 0-4.847-3.094-8.353-8.56-8.353H74.12v1.623h2.114v13.527H74.12v1.623zm27.05-16.76h-6.426v1.65h2.526v11.268h-.1L95.21 6.885H91.6v1.65h2.22V21.98h-1.935v1.65h6.385v-1.65h-2.655V10.444h.1l9.724 13.202h1.21V8.535h2.09zm26.71 5.29h-5.156v1.467h1.83l-1.857 7.247h-.128l-3.586-8.716h-1.21l-3.423 8.718h-.127l-2.14-7.247h1.933v-1.47h-5.41v1.467h1.522l3.25 10.003h1.352l3.432-8.766h.13l3.496 8.765h1.393l3.122-10.003h1.573zm6.704 11.727c2.837 0 4.514-1.583 4.83-3.568l-1.523-.338c-.36 1.42-1.365 2.347-3.17 2.347-2.283 0-3.53-1.468-3.636-4.02h8.058c.1-.445.153-.898.156-1.354-.024-2.71-1.728-5.03-4.873-5.03-3.246 0-5.26 2.58-5.26 6.14 0 3.712 2.162 5.825 5.412 5.825zm13.408 0c3.663 0 5.134-3.25 5.134-6.294 0-3.642-2.063-5.67-4.924-5.67-2.19 0-3.402 1.186-4.1 2.603V5.905h-3.53v1.47h1.692v12.923a22.8 22.8 0 01-.338 3.35h1.805a44.05 44.05 0 00.235-1.906c.747 1.39 2.242 2.165 4.02 2.165zm26.198-1.728h-1.985V5.904h-4.6v1.47h2.798v6.653c-.748-1.342-2.15-2.09-3.842-2.09-3.74 0-5.183 3.2-5.183 6.267 0 3.584 1.958 5.698 4.924 5.698 2.087 0 3.352-1.224 4.1-2.577v2.323h3.784zm6.963 1.728c3.53 0 5.75-2.526 5.742-6.006 0-3.25-1.934-5.982-5.647-5.982s-5.67 2.735-5.67 6.087c0 3.457 2.09 5.905 5.568 5.905zm12.942 0c3.172 0 4.538-2.114 4.866-4.112l-1.548-.34c-.334 1.885-1.315 2.917-3.094 2.917-2.27 0-3.507-1.637-3.507-4.397 0-2.475.982-4.487 3.43-4.487a4.4 4.4 0 012.45.646l.42 1.936 1.496-.18-.44-2.758c-1.16-.876-2.397-1.187-3.92-1.187-3.556 0-5.362 2.966-5.362 6.14 0 3.685 2.036 5.825 5.208 5.825zm11.166 0c2.76 0 4.874-1.34 4.847-3.595 0-4.565-7.1-2.195-7.1-5.184 0-1.177 1.03-1.69 2.474-1.69.826-.015 1.64.18 2.368.567l.267 1.864 1.495-.18-.284-2.68a8.135 8.135 0 00-3.997-1.06c-2.088 0-4.255.903-4.255 3.328 0 4.46 7.193 2.063 7.193 5.208 0 1.315-1.495 1.934-3.095 1.934a5.812 5.812 0 01-2.553-.568l.078-1.522-1.444-.156-.362 2.604c.977.643 2.736 1.133 4.36 1.133zm-54.042-6.11c0 2.373-1.058 4.564-3.584 4.564a3.455 3.455 0 01-3.534-3.456v-1.728c.05-1.7 1.444-3.686 3.635-3.686 1.948 0 3.48 1.444 3.483 4.305zm19.18-1.06v1.833c-.076 1.73-1.57 3.79-3.634 3.79-1.985 0-3.48-1.47-3.48-4.28 0-2.425 1.133-4.59 3.686-4.59a3.36 3.36 0 013.43 3.248zm14.597 1.133c0 2.58-1.34 4.488-3.79 4.488-2.453 0-3.74-1.958-3.74-4.46 0-2.55 1.34-4.434 3.74-4.434 2.397 0 3.79 1.778 3.79 4.405zm-104.39-2.593c0 4.16-2.32 6.763-6.574 6.763h-3.478V8.508h3.466c4.254 0 6.574 2.71 6.587 6.764zM.116 0h47.956v47.956H.116zM42.01 22.02c-.036-.723-.12-1.448-.17-2.166a1.74 1.74 0 00-.395-.98 2.465 2.465 0 00-1.026-.74c-.808-.314-1.622-.664-2.435-.975a21.509 21.509 0 01-3.342-1.472 2.626 2.626 0 01-1.296-1.972 2.954 2.954 0 00-1.47-2.228 4.062 4.062 0 00-2.958-.35c-.734.176-1.5.165-2.23-.033l-1.112-.34-.302-.09-.873-.26c-1.57-.468-2.228-.713-4.773-.278a14.678 14.678 0 00-7.09 3.897l-6.37 6.76h5.72l-3.504 3.71h6.026l-3.503 3.71h4.844l-1.548 4.06c5.93 6.07 12.25 7.295 12.25 7.295 0-1.673.38-8.24.826-9.34a5.25 5.25 0 01.762-1.54 4.211 4.211 0 013.393-1.547c1.303 0 2.597.238 3.815.702.74.31 1.577.264 2.277-.122a38.42 38.42 0 001.498-.94.839.839 0 01.556-.18c.54.06 1.054-.237 1.27-.734.16-.33.35-.64.524-.97.472-.884.69-1.88.633-2.88z"></path></svg></a><nav class="main-nav" role="navigation"><ul><li class="top-level-entry-container"><button type="button" class="top-level-entry" aria-haspopup="true">Technologies<span class="main-menu-arrow" aria-hidden="true">▼</span></button><ul><li data-item="Technologies" role="menuitem"><a href="/en-US/docs/Web">Technologies Overview</a></li><li data-item="Technologies" role="menuitem"><a href="/en-US/docs/Web/HTML">HTML</a></li><li data-item="Technologies" role="menuitem"><a href="/en-US/docs/Web/CSS">CSS</a></li><li data-item="Technologies" role="menuitem"><a href="/en-US/docs/Web/JavaScript">JavaScript</a></li><li data-item="Technologies" role="menuitem"><a href="/en-US/docs/Web/Guide/Graphics">Graphics</a></li><li data-item="Technologies" role="menuitem"><a href="/en-US/docs/Web/HTTP">HTTP</a></li><li data-item="Technologies" role="menuitem"><a href="/en-US/docs/Web/API">APIs / DOM</a></li><li data-item="Technologies" role="menuitem"><a href="/en-US/docs/Mozilla/Add-ons/WebExtensions">Browser Extensions</a></li><li data-item="Technologies" role="menuitem"><a href="/en-US/docs/Web/MathML">MathML</a></li></ul></li><li class="top-level-entry-container"><button type="button" class="top-level-entry" aria-haspopup="true">References &amp; Guides<span class="main-menu-arrow" aria-hidden="true">▼</span></button><ul><li data-item="References &amp; Guides" role="menuitem"><a href="/en-US/docs/Learn">Learn web development</a></li><li data-item="References &amp; Guides" role="menuitem"><a href="/en-US/docs/Web/Tutorials">Tutorials</a></li><li data-item="References &amp; Guides" role="menuitem"><a href="/en-US/docs/Web/Reference">References</a></li><li data-item="References &amp; Guides" role="menuitem"><a href="/en-US/docs/Web/Guide">Developer Guides</a></li><li data-item="References &amp; Guides" role="menuitem"><a href="/en-US/docs/Web/Accessibility">Accessibility</a></li><li data-item="References &amp; Guides" role="menuitem"><a href="/en-US/docs/Games">Game development</a></li><li data-item="References &amp; Guides" role="menuitem"><a href="/en-US/docs/Web">...more docs</a></li></ul></li><li class="top-level-entry-container"><button type="button" class="top-level-entry" aria-haspopup="true">Feedback<span class="main-menu-arrow" aria-hidden="true">▼</span></button><ul><li data-item="Feedback" role="menuitem"><a href="/en-US/docs/MDN/Feedback">Send Feedback</a></li><li data-item="Feedback" role="menuitem"><a target="_blank" rel="noopener noreferrer" href="https://support.mozilla.org/">Get Firefox help<!-- --> 🌐</a></li><li data-item="Feedback" role="menuitem"><a target="_blank" rel="noopener noreferrer" href="https://stackoverflow.com/">Get web development help<!-- --> 🌐</a></li><li data-item="Feedback" role="menuitem"><a href="/en-US/docs/MDN/Community">Join the MDN community</a></li><li data-item="Feedback" role="menuitem"><a target="_blank" rel="noopener noreferrer" href="https://github.com/mdn/sprints/issues/new?template=issue-template.md&amp;projects=mdn/sprints/2&amp;labels=user-report&amp;title=%2Fen-US%2Fdocs%2FLearn%2FForms%2FAdvanced_form_styling">Report a content problem<!-- --> 🌐</a></li><li data-item="Feedback" role="menuitem"><a target="_blank" rel="noopener noreferrer" href="https://github.com/mdn/kuma/issues/new">Report an issue<!-- --> 🌐</a></li></ul></li></ul></nav><form class="header-search" id="nav-main-search" action="/en-US/search" method="get" role="search"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 26 28" aria-hidden="true" class="search-icon"><path d="M18 13c0-3.859-3.141-7-7-7s-7 3.141-7 7 3.141 7 7 7 7-3.141 7-7zm8 13c0 1.094-.906 2-2 2a1.96 1.96 0 01-1.406-.594l-5.359-5.344a10.971 10.971 0 01-6.234 1.937c-6.078 0-11-4.922-11-11s4.922-11 11-11 11 4.922 11 11c0 2.219-.672 4.406-1.937 6.234l5.359 5.359c.359.359.578.875.578 1.406z"></path></svg><label for="main-q" class="visually-hidden">Search MDN</label><input type="search" class="search-input-field" id="main-q" name="q" placeholder="Search MDN" pattern="(.|\s)*\S(.|\s)*" required=""/></form></header><main role="main"><header><div class="titlebar-container"><div class="titlebar"><h1 class="title">Advanced form styling</h1></div></div><div class="full-width-row-container"><div class="max-content-width-container"><nav class="breadcrumbs" role="navigation"><ol typeof="BreadcrumbList" vocab="https://schema.org/" aria-label="breadcrumbs"><li property="itemListElement" typeof="ListItem"><a href="/en-US/docs/Learn" class="breadcrumb-chevron" property="item" typeof="WebPage"><span class="pre-text">See<!-- --> </span><span property="name">Learn web development</span></a><meta property="position" content="1"/></li><li property="itemListElement" typeof="ListItem"><a href="/en-US/docs/Learn/Forms" class="breadcrumb-previous" property="item" typeof="WebPage"><span class="pre-text">See<!-- --> </span><span property="name">Web forms — Working with user data</span></a><meta property="position" content="2"/></li><li property="itemListElement" typeof="ListItem"><a href="/en-US/docs/Learn/Forms/Advanced_form_styling" class="crumb-current-page" property="item" typeof="WebPage"><span property="name" aria-current="page">Advanced form styling</span></a><meta property="position" content="3"/></li></ol></nav><div class="dropdown-container"><button id="header-language-menu" type="button" class="dropdown-menu-label" aria-haspopup="true" aria-owns="language-menu" aria-label="Current language is English. Choose your preferred language.">English<span class="dropdown-arrow-down" aria-hidden="true">▼</span></button><ul id="language-menu" class="dropdown-menu-items right" role="menu"><li lang="fr" role="menuitem"><a href="/fr/docs/Web/Guide/HTML/Formulaires/Advanced_styling_for_HTML_forms" title="French"><bdi>Français</bdi></a></li><li lang="ja" role="menuitem"><a href="/ja/docs/Learn/HTML/Forms/Advanced_styling_for_HTML_forms" title="Japanese"><bdi>日本語</bdi></a></li><li lang="nl" role="menuitem"><a href="/nl/docs/Learn/HTML/Forms/Geavanceerde_styling_van_HTML-formulieren" title="Dutch"><bdi>Nederlands</bdi></a></li><li lang="zh-CN" role="menuitem"><a href="/zh-CN/docs/Learn/HTML/Forms/Advanced_styling_for_HTML_forms" title="Chinese (Simplified)"><bdi>中文 (简体)</bdi></a></li><li><a href="https://wiki.developer.mozilla.org/en-US/docs/Learn/Forms/Advanced_form_styling$locales" rel="nofollow" id="translations-add">Add a translation</a></li></ul></div></div></div></header><div class="wiki-left-present content-layout"><aside class="document-toc-container"><section class="document-toc"><header><h2>On this Page</h2><button type="button" class="toc-trigger-mobile">Jump to section<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 28" aria-hidden="true" role="img"><path d="M16 11a.99.99 0 01-.297.703l-7 7C8.516 18.89 8.265 19 8 19s-.516-.109-.703-.297l-7-7A.996.996 0 010 11c0-.547.453-1 1-1h14c.547 0 1 .453 1 1z"></path></svg></button></header><ul><li><a href="#appearance_controlling_OS-level_styling" rel="internal">appearance: controlling OS-level styling</a><li><a href="#What_can_be_done_about_the_ugly_elements" rel="internal">What can be done about the "ugly" elements?</a><li><a href="#The_road_to_nicer_forms_useful_libraries_and_polyfills" rel="internal">The road to nicer forms: useful libraries and polyfills</a><li><a href="#Summary" rel="internal">Summary</a><li><a href="#In_this_module" rel="internal">In this module</a></ul></section></aside><div id="content" class="article text-content"><article id="wikiArticle"><div></div>

<div><div class="prevnext">
    <div><a href="/en-US/docs/Learn/Forms/Styling_web_forms" style="float: left; width: 20%; text-align: left;"><span style=""><i class="icon-arrow-left"></i> Previous </span></a><a href="/en-US/docs/Learn/Forms" style="float: left; width: 60%; text-align: center;"><span style=""><i class="icon-arrow-up"></i> Overview: Forms</span></a><a href="/en-US/docs/Learn/Forms/UI_pseudo-classes" style="width: 20%; float: right; text-align: right;"><span style=""> Next  <i class="icon-arrow-right"></i></span></a></div>
    <p> </p>
</div></div>

<p><span class="seoSummary">In this article, we will see what can be done with CSS to style the types of form control that are more difficult to style — the "bad" and "ugly" categories.</span> As we saw <a class="new" href="/en-US/docs/Forms/Styling_web_forms" rel="nofollow">in the previous article</a>, text fields and buttons are perfectly easy to style; now we will dig into styling the bits that are more problematic.</p>

<table class="learn-box standard-table">
	<tbody>
		<tr>
			<th scope="row">Prerequisites:</th>
			<td>Basic computer literacy, and a basic understanding of <a href="/en-US/docs/Learn/HTML/Introduction_to_HTML">HTML</a> and <a href="/en-US/docs/Learn/CSS/First_steps">CSS</a>.</td>
		</tr>
		<tr>
			<th scope="row">Objective:</th>
			<td>To understand what parts of forms are hard to style, and why; to learn what can be done to customize them.</td>
		</tr>
	</tbody>
</table>

<p>To recap what we said in the previous article, we have:</p>

<p><strong>The bad</strong>: Some elements are more difficult to style, requiring more complex CSS or some more specific tricks:</p>

<ul>
	<li>Checkboxes and radio buttons</li>
	<li><code><a href="/en-US/docs/Web/HTML/Element/input/search">&lt;input type="search"&gt;</a></code></li>
</ul>

<p><strong>The ugly</strong>: Some elements can't be styled thoroughly using CSS. These include:</p>

<ul>
	<li>Elements involved in creating dropdown widgets, including <a href="/en-US/docs/Web/HTML/Element/select" title="The HTML &lt;select> element represents a control that provides a menu of options"><code>&lt;select&gt;</code></a>, <a href="/en-US/docs/Web/HTML/Element/option" title="The HTML &lt;option> element is used to define an item contained in a &lt;select>, an &lt;optgroup>, or a &lt;datalist> element. As such, &lt;option> can represent menu items in popups and other lists of items in an HTML document."><code>&lt;option&gt;</code></a>, <a href="/en-US/docs/Web/HTML/Element/optgroup" title="The HTML &lt;optgroup> element creates a grouping of options within a &lt;select> element."><code>&lt;optgroup&gt;</code></a> and <a href="/en-US/docs/Web/HTML/Element/datalist" title="The HTML &lt;datalist> element contains a set of &lt;option> elements that represent the permissible or recommended options available to choose from within other controls."><code>&lt;datalist&gt;</code></a>.</li>
	<li><code><a href="/en-US/docs/Web/HTML/Element/input/color">&lt;input type="color"&gt;</a></code></li>
	<li>Date-related controls such as <code><a href="/en-US/docs/Web/HTML/Element/input/datetime-local">&lt;input type="datetime-local"&gt;</a></code></li>
	<li><code><a href="/en-US/docs/Web/HTML/Element/input/range">&lt;input type="range"&gt;</a></code></li>
	<li><code><a href="/en-US/docs/Web/HTML/Element/input/file">&lt;input type="file"&gt;</a></code></li>
	<li><a href="/en-US/docs/Web/HTML/Element/progress" title="The HTML &lt;progress> element displays an indicator showing the completion progress of a task, typically displayed as a progress bar."><code>&lt;progress&gt;</code></a> and <a href="/en-US/docs/Web/HTML/Element/meter" title="The HTML &lt;meter> element represents either a scalar value within a known range or a fractional value."><code>&lt;meter&gt;</code></a></li>
</ul>

<p>Let's first talk about the <code><a href="/en-US/docs/Web/CSS/appearance">appearance</a></code> property, which is pretty useful for making all of the above more stylable.</p>

<h2 id="appearance_controlling_OS-level_styling">appearance: controlling OS-level styling</h2>

<p>In the previous article we said that historically, styling of web form controls was largely taken from the underlying operating system, which is part of the problem with customizing the look of these controls.</p>

<p>The <a href="/en-US/docs/Web/CSS/appearance" title="The -moz-appearance CSS property is used in Gecko (Firefox) to display an element using platform-native styling based on the operating system's theme."><code>appearance</code></a> property was created as a way to control what OS- or system-level styling was applied to web form controls. Unfortunately, the behavior of this property's original implementations was very different across browsers, making it not very usable. Newer implementations are more consistent in behavior; interestingly enough, both Chromium-based browsers (Chrome, Opera, Edge), Safari, and Firefox all support the <code>-webkit-</code>  prefixed version (<code>-webkit-appearance</code>). Firefox settled on this because web developers mostly seemed to be using the <code>-webkit-</code> prefixed version, so it was better for compatibility.</p>

<p>If you look at the reference page you'll see a lot of different possible values listed for <code>-webkit-appearance</code>, however by far the most helpful value, and probably the only one you'll use, is <code>none</code>. This stops any control you apply it to from using system-level styling, as much as possible, and lets you build up the styles yourself using CSS.</p>

<p>For example, let's take the following controls:</p>

<pre class="brush: html">&lt;form&gt;
  &lt;p&gt;
    &lt;label for="search"&gt;search: &lt;/label&gt;
    &lt;input id="search" name="search" type="search"&gt;
  &lt;/p&gt;
  &lt;p&gt;
    &lt;label for="text"&gt;text: &lt;/label&gt;
    &lt;input id="text" name="text" type="text"&gt;
  &lt;/p&gt;
  &lt;p&gt;
    &lt;label for="date"&gt;date: &lt;/label&gt;
    &lt;input id="date" name="date" type="datetime-local"&gt;
  &lt;/p&gt;
  &lt;p&gt;
    &lt;label for="radio"&gt;radio: &lt;/label&gt;
    &lt;input id="radio" name="radio" type="radio"&gt;
  &lt;/p&gt;
  &lt;p&gt;
    &lt;label for="checkbox"&gt;checkbox: &lt;/label&gt;
    &lt;input id="checkbox" name="checkbox" type="checkbox"&gt;
  &lt;/p&gt;
  &lt;p&gt;&lt;input type="submit" value="submit"&gt;&lt;/p&gt;
  &lt;p&gt;&lt;input type="button" value="button"&gt;&lt;/p&gt;
&lt;/form&gt;</pre>

<p>Applying the following CSS to them removes system-level styling.</p>

<pre class="brush: css">input {
  -webkit-appearance: none; 
  appearance: none;
}</pre>

<div class="blockIndicator note">
<p><strong>Note</strong>: It is a good idea to always include both declarations — prefixed and unprefixed — when using a prefixed property. Prefixed usually means "work in progress", so in the future browser vendors may come to a consensus to drop the prefix. The above code is good for future-proofing against such an eventuality.</p>
</div>

<p>The following live example shows you what they look like in your system — default on the left, and with the above CSS applied on the right (<a class="external" href="https://mdn.github.io/learning-area/html/forms/styling-examples/appearence-tester.html" rel="noopener">find it here also</a> if you want to test it on other systems).</p>

<p><iframe class="live-sample-frame" frameborder="0" height="400" src="https://mdn.github.io/learning-area/html/forms/styling-examples/appearence-tester.html" width="100%"></iframe></p>

<p>In most cases, the effect is to remove the stylized border, which makes CSS styling a bit easier, but isn't really essential. In a couple of cases — search and radio buttons/checkboxes, it becomes way more useful. We'll look at those now.</p>

<h3 id="Taming_search_boxes">Taming search boxes</h3>

<p><code><a href="/en-US/docs/Web/HTML/Element/input/search">&lt;input type="search"&gt;</a></code> is basically just a text input, so why is <code>appearance: none;</code> useful here? The answer is that in Chromium-based browsers on macOS, search boxes have some styling restrictions — you can't adjust their <code>height</code> or <code>font-size</code> freely, for example. This is because non-macOS <a class="external" href="https://www.wired.com/2013/04/blink/" rel="noopener">Chrome browsers no longer use the WebKit rendering engine</a>, which enabled Aqua appearance by default for certain form controls. With Aqua enabled, some form controls are not <a class="external" href="https://webkit.org/blog/28/buttons/" rel="noopener">scalable</a>. </p>

<p>This can be fixed using our friend <code>appearance: none;</code>, which disables the default Aqua appearance:</p>

<pre class="brush: css">input[type="search"] {
    -webkit-appearance: none;
    appearance: none;
}</pre>

<p>In the example below, you can see two identical styled search boxes. The right one has <code>appearance: none;</code> applied, and the left one doesn't. If you look at it in macOS Chrome you'll see that the left one isn't sized properly.</p>

<p><iframe class="live-sample-frame" frameborder="0" height="200" src="https://mdn.github.io/learning-area/html/forms/styling-examples/search-appearence.html" width="100%"></iframe></p>

<p>Interestingly, setting border/background on the search field also fixes this problem, as it <a class="external" href="https://webkit.org/blog/28/buttons/" rel="noopener">disables</a> or "breaks" the Aqua appearance too. The following styled search doesn't have <code>appearance: none;</code> applied, but it doesn't suffer from the same problem in macOS Chrome as the previous example.</p>

<p><iframe class="live-sample-frame" frameborder="0" height="200" src="https://mdn.github.io/learning-area/html/forms/styling-examples/styled-search.html" width="100%"></iframe></p>

<div class="blockIndicator note">
<p><strong>Note</strong>: You may have noticed that in the search field, the "x" delete icon disappears when the input loses focus in Edge and Chrome, but stays put in Safari. To remove via CSS, you can use <code>input[type="search"]::-webkit-search-cancel-button { display: none; }</code>. However, this seems to get rid of the icon <em>with</em> focus too, with no apparent way to get it back.</p>
</div>

<h3 id="Styling_checkboxes_and_radio_buttons">Styling checkboxes and radio buttons</h3>

<p>Styling a checkbox or a radio button is tricky by default. The sizes of check boxes and radio buttons are not meant to be changed with their default designs, and browsers react very differently when you try.</p>

<p>For example, consider this simple test case:</p>

<pre class="brush: html">&lt;span&gt;&lt;input type="checkbox"&gt;&lt;/span&gt;</pre>

<pre class="brush: css">span {
    display: inline-block;
    background: red;
}

input[type="checkbox"] {
    width: 100px;
    height: 100px;
}</pre>

<p>Different browsers handle this in many different, often ugly ways:</p>

<table>
	<thead>
		<tr>
			<th scope="col">Browser</th>
			<th scope="col">Rendering</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>Firefox 71 (macOS)</td>
			<td><img alt="" src="https://mdn.mozillademos.org/files/15671/firefox-mac-checkbox.png" style="height: 118px; width: 120px;"></td>
		</tr>
		<tr>
			<td>Firefox 57 (Windows 10)</td>
			<td><img alt="" src="https://mdn.mozillademos.org/files/15691/firefox-windows-checkbox.png" style="height: 115px; width: 113px;"></td>
		</tr>
		<tr>
			<td>Chrome 77 (macOS), Safari 13, Opera</td>
			<td><img alt="" src="https://mdn.mozillademos.org/files/15676/chrome-mac-checkbox.png" style="height: 117px; width: 116px;"></td>
		</tr>
		<tr>
			<td>Chrome 63 (Windows 10)</td>
			<td><img alt="" src="https://mdn.mozillademos.org/files/15681/chrome-windows-checkbox.png" style="height: 117px; width: 120px;"></td>
		</tr>
		<tr>
			<td>Internet Explorer 11 (Windows 10)</td>
			<td><img alt="" src="https://mdn.mozillademos.org/files/15696/ie11-checkbox.png" style="height: 112px; width: 119px;"></td>
		</tr>
		<tr>
			<td>Edge 16 (Windows 10)</td>
			<td><img alt="" src="https://mdn.mozillademos.org/files/15686/edge-checkbox.png" style="height: 118px; width: 119px;"></td>
		</tr>
	</tbody>
</table>

<h4 id="Using_appearence_none_on_radioscheckboxes">Using appearence: none on radios/checkboxes</h4>

<p>As we showed before, you can remove the default appearance of a checkbox or radio button altogether with <a href="/en-US/docs/Web/CSS/appearance" title="The -moz-appearance CSS property is used in Gecko (Firefox) to display an element using platform-native styling based on the operating system's theme."><code>appearance</code></a><code>:none;</code> Let's take this example HTML:</p>

<pre class="brush: html">&lt;form&gt;
  &lt;fieldset&gt;
    &lt;legend&gt;Fruit preferences&lt;/legend&gt;

    &lt;p&gt;
      &lt;label&gt;
        &lt;input type="checkbox" name="fruit-1" value="cherry"&gt;
        I like cherry
      &lt;/label&gt;
    &lt;/p&gt;
    &lt;p&gt;
      &lt;label&gt;
        &lt;input type="checkbox" name="fruit-2" value="banana" disabled&gt;
        I can't like banana
      &lt;/label&gt;
    &lt;/p&gt;
    &lt;p&gt;
      &lt;label&gt;
        &lt;input type="checkbox" name="fruit-3" value="strawberry"&gt;
        I like strawberry
      &lt;/label&gt;
    &lt;/p&gt;
  &lt;/fieldset&gt;
&lt;/form&gt;</pre>

<p>Now, let's style these with a custom checkbox design. Let's start by unstyling the original check boxes:</p>

<pre class="brush: css">input[type="checkbox"] {
  -webkit-appearance: none;
  appearance: none;
}
</pre>

<p>We can use the <a href="/en-US/docs/Web/CSS/:checked" title='The :checked CSS pseudo-class selector represents any radio (&lt;input type="radio">), checkbox (&lt;input type="checkbox">), or option (&lt;option> in a &lt;select>) element that is checked or toggled to an on state.'><code>:checked</code></a> and <a href="/en-US/docs/Web/CSS/:disabled" title="The :disabled CSS pseudo-class represents any disabled element. An element is disabled if it can't be activated (selected, clicked on, typed into, etc.) or accept focus. The element also has an enabled state, in which it can be activated or accept focus."><code>:disabled</code></a> pseudo-classes to change the appearance of our custom checkbox as its state changes:</p>

<pre class="brush: css">input[type="checkbox"] {
  position: relative;
  width: 1em;
  height: 1em;
  border: 1px solid gray;
  /* Adjusts the position of the checkboxes on the text baseline */ 
  vertical-align: -2px;
  /* Set here so that Windows' High-Contrast Mode can override */
  color: green;
}

input[type="checkbox"]::before {
  content: "✔";
  position: absolute;
  font-size: 1.2em;
  right: -1px;
  top: -0.3em;
  visibility: hidden;
}

input[type="checkbox"]:checked::before {
  /* Use `visibility` instead of `display` to avoid recalculating layout */
  visibility: visible;
}

input[type="checkbox"]:disabled {
  border-color: black;
  background: #ddd;
  color: gray;
}</pre>

<p>You'll find more out about such pseudo-classes and more in the <a href="/en-US/docs/Learn/Forms/UI_pseudo-classes">next article</a>; the above ones do the following:</p>

<ul>
	<li><code>:checked</code> — the checkbox (or radio button) is in a checked state — the user has clicked/activated it.</li>
	<li><code>:disabled</code> — the checkbox (or radio button) is in a disabled state — it cannot be interacted with.</li>
</ul>

<p id="results">You can see the live result:</p>

<p><iframe class="live-sample-frame" frameborder="0" height="200" src="https://mdn.github.io/learning-area/html/forms/styling-examples/checkboxes-styled.html" width="100%"></iframe></p>

<p>We've also created a couple of other examples to give you more ideas:</p>

<ul>
	<li><a class="external" href="https://mdn.github.io/learning-area/html/forms/styling-examples/radios-styled.html" rel="noopener">Styled radio buttons</a>: Custom radio button styling.</li>
	<li><a class="external" href="https://mdn.github.io/learning-area/html/forms/toggle-switch-example/" rel="noopener">Toggle switch example</a>: A checkbox styled to look like a toggle switch.</li>
</ul>

<p>If you view these checkboxes in a browser that doesn't support <a href="/en-US/docs/Web/CSS/appearance" title="The -moz-appearance CSS property is used in Gecko (Firefox) to display an element using platform-native styling based on the operating system's theme."><code>appearance</code></a>, your custom design will be lost, but they will still look like checkboxes and be usable.</p>

<div class="blockIndicator note">
<p><strong>Note</strong>: While Internet Explorer doesn't support any version of <code>appearance</code>, the <code>input[type=checkbox]::-ms-check</code> enables the targeting of checkboxes in IE only. This technique works for radio buttons too, despite the name <code>-ms-<em><strong>check</strong></em></code>.</p>
</div>

<h2 id="What_can_be_done_about_the_ugly_elements">What can be done about the "ugly" elements?</h2>

<p>Now let's turn our attention to the "ugly" controls — the ones that are really hard to thoroughly  style. In short, these are drop-down boxes, complex control types like <code><a href="/en-US/docs/Web/HTML/Element/input/color">color</a></code> and <code><a href="/en-US/docs/Web/HTML/Element/input/datetime-local">datetime-local</a></code>, and feedback—oriented controls like <a href="/en-US/docs/Web/HTML/Element/progress" title="The HTML &lt;progress> element displays an indicator showing the completion progress of a task, typically displayed as a progress bar."><code>&lt;progress&gt;</code></a> and <a href="/en-US/docs/Web/HTML/Element/meter" title="The HTML &lt;meter> element represents either a scalar value within a known range or a fractional value."><code>&lt;meter&gt;</code></a>.</p>

<p>The problem is that these elements have very different default looks across browsers, and while you can style them in some ways, some parts of their internals are literally impossible to style.</p>

<p>If you are prepared to live with some differences in look and feel, you can get away with some simple styling to make sizing consistent, uniform styling of things like background-colors, and usage of appearence to get rid of some system-level styling.</p>

<p>Take the following example, which shows a number of the "ugly" form features in action:</p>

<p><iframe class="live-sample-frame" frameborder="0" height="750" src="https://mdn.github.io/learning-area/html/forms/styling-examples/ugly-controls.html" width="100%"></iframe></p>

<p>This example has the following CSS applied to it:</p>

<pre class="brush: css">body {
  font-family: 'Josefin Sans', sans-serif;
  margin: 20px auto;
  max-width: 400px;
}

form &gt; div {
  margin-bottom: 20px;
}

select {
  -webkit-appearance: none;
  appearance: none;
}

.select-wrapper {
  position: relative;
}

.select-wrapper::after {
  content: "▼";
  font-size: 1rem;
  top: 6px;
  right: 10px;
  position: absolute;
}

button, label, input, select, progress, meter {
  display: block;
  font-family: inherit;
  font-size: 100%;
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  width: 100%;
  padding: 5px;
  height: 30px;
}

input[type="text"], input[type="datetime-local"], input[type="color"], select {
  box-shadow: inset 1px 1px 3px #ccc;
  border-radius: 5px;
}

label {
  margin-bottom: 5px;
}

button {
  width: 60%;
  margin: 0 auto;
}</pre>

<div class="blockIndicator note">
<p><strong>Note</strong>: If you want to test these examples across a number of browsers simultaneously, you can <a class="external" href="https://mdn.github.io/learning-area/html/forms/styling-examples/ugly-controls.html" rel="noopener">find it live here</a> (also <a class="external" href="https://github.com/mdn/learning-area/blob/master/html/forms/styling-examples/ugly-controls.html" rel="noopener">see here for the source code</a>).</p>

<p>Also bear in mind that we've added some JavaScript to the page that lists the files selected by the file picker, below the control itself. This is a simplified version of the example found on the <code><a href="/en-US/docs/Web/HTML/Element/input/file#Examples">&lt;input type="file"&gt;</a></code> reference page.</p>
</div>

<p>As you can see, we've done fairly well at getting these to look uniform across modern browsers.</p>

<p>We've applied some global normalizing CSS to all the controls and their labels, to get them to size in the same way, adopt their parent font, etc., as mentioned in the previous article:</p>

<pre class="brush: css">button, label, input, select, progress, meter {
  display: block;
  font-family: inherit;
  font-size: 100%;
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  width: 100%;
  padding: 5px;
  height: 30px;
}</pre>

<p>We also added some uniform shadow and rounded corners to the controls on which it made sense:</p>

<pre class="brush: css">input[type="text"], input[type="datetime-local"], input[type="color"], select {
  box-shadow: inset 1px 1px 3px #ccc;
  border-radius: 5px;
}</pre>

<p>on other controls like range types, progress bars, and meters they just add an ugly box around the control area, so it doesn't make sense.</p>

<p>Let's talk about some specifics of each of these types of control, highlighting difficulties along the way.</p>

<h3 id="Selects_and_datalists">Selects and datalists</h3>

<p>In modern browsers, selects and datalists are generally not too bad to style provided you don't want to vary the look and feel too much from the defaults.</p>

<p>We've managed to get the basic look of the boxes looking pretty uniform and consisent. The datalist control is <code>&lt;input type="text"&gt;</code> anyway, so we knew this wouldn't be a problem.</p>

<p>Two things are slightly more problematic. First of all, the select's "arrow" icon that indicates it is a dropdown differs across browsers. It also tends to change if you increase the size of the select box, or resize in an ugly fashion. To fix this in our example we first used our old friend <code>appearance: none</code> to get rid of the icon altogether:</p>

<pre class="brush: css">select {
  -webkit-appearance: none;
  appearance: none;
}</pre>

<p>We then created our own icon using generated content. We put an extra wrapper around the control, because <code><a href="/en-US/docs/Web/CSS/::before">::before</a></code>/<code><a href="/en-US/docs/Web/CSS/::after">::after</a></code> don't work on <code>&lt;select&gt;</code> elements (this is because generated content is placed relative to an element's formatting box, but form inputs work more like replaced elements — their display is generated by the browser and put in place — and therefore don't have one):</p>

<pre class="brush: html">&lt;div class="select-wrapper"&gt;&lt;select id="select" name="select"&gt;
  &lt;option&gt;Banana&lt;/option&gt;
  &lt;option&gt;Cherry&lt;/option&gt;
  &lt;option&gt;Lemon&lt;/option&gt;
&lt;/select&gt;&lt;/div&gt;</pre>

<p>We then use generated content to generate a little down arrow, and put it in the right place using positioning:</p>

<pre class="brush: css">.select-wrapper {
  position: relative;
}

.select-wrapper::after {
  content: "▼";
  font-size: 1rem;
  top: 6px;
  right: 10px;
  position: absolute;
}</pre>

<p>The second, slightly more major issue is that you don't have control over the box that appears containing the options when you click on the <code>&lt;select&gt;</code> box to open it. You'll notice that the options don't inherit the font set on the parent. You also can't consistently set things like spacing and colors. For example, Firefox will apply <code><a href="/en-US/docs/Web/CSS/color">color</a></code> and <code><a href="/en-US/docs/Web/CSS/background-color">background-color</a></code> when set on the <code><a href="/en-US/docs/Web/HTML/Element/option">&lt;option&gt;</a></code> elements, Chrome won't. Neither of them will apply any kind of spacing (e.g. <code><a href="/en-US/docs/Web/CSS/padding">padding</a></code>). The same is also true of the autocomplete list that appears for the datalist.</p>

<p>If you really need full control over the option styling, you'll have to either use some kind of library to generate a custom control, or build your own custom control, or in the case of select use the <code>multiple</code> attribute, which makes all the options appear on the page, sidestepping this particular problem:</p>

<pre class="brush: html">&lt;select id="select" name="select" multiple&gt;
  ...
&lt;/select&gt;</pre>

<p>Of course, this might also not fit in with the design you are going for, but it's worth noting!</p>

<h3 id="Date_input_types">Date input types</h3>

<p>The date/time input types (<code><a href="/en-US/docs/Web/HTML/Element/input/datetime-local">datetime-local</a></code>, <code><a href="/en-US/docs/Web/HTML/Element/input/time">time</a></code>, <code><a href="/en-US/docs/Web/HTML/Element/input/week">week</a></code>, <code><a href="/en-US/docs/Web/HTML/Element/input/month">month</a></code>) all have the same major associated issue. The actual containing box is as easy to style as any text input, and what we've got in this demo looks fine.</p>

<p>However, the internal parts of the control (e.g. the popup calendar that you use pick a date, the spinner that you can use to increment/decrement values) are not stylable at all, and you can't get rid of them using <code>appearence: none;</code>. If you really need full control over the styling, you'll have to either use some kind of library to generate a custom control, or build your own.</p>

<div class="blockIndicator note">
<p><strong>Note</strong>: It is worth mentioning <code><a href="/en-US/docs/Web/HTML/Element/input/number">&lt;input type="number"&gt;</a></code> here too — this also has a spinner that you can use to increment/decrement values, so potentially suffers from the same problem. However, in the case of the <code>number</code> type the data being collected is simpler, and it is easy to just use a <code>text</code> input type instead if desired (or <code>tel</code> if you want mobile browsers to show the numeric keypad).</p>
</div>

<h3 id="Range_input_types">Range input types</h3>

<p><code><a href="/en-US/docs/Web/HTML/Element/input/range">&lt;input type="range"&gt;</a></code> is annoying to style. You can use something like the following to remove the default slider track completely and replace it with a custom style (a thin red track, in this case):</p>

<pre class="brush: css">input[type="range"] {
  appearance: none;
  -webkit-appearance: none;
  background: red;
  height: 2px;
  padding: 0;
  outline: 1px solid transparent;
}</pre>

<p>However, it is very difficult to customize the style of the range control's drag handle — to get full control over range styling you'll need to use a whole bunch of complex CSS code, including multiple non-standard, browser-specific pseudo-elements. Check out <a class="external" href="https://css-tricks.com/styling-cross-browser-compatible-range-inputs-css/" rel="noopener">Styling Cross-Browser Compatible Range Inputs with CSS</a> on CSS tricks for a detailed write up of what's needed.</p>

<h3 id="Color_input_types">Color input types</h3>

<p>Input controls of type color are not too bad. In supporting browsers, they tend to just give you a block of solid color with a small border.</p>

<p>You can remove the border, just leaving the block of color, using something like this:</p>

<pre class="brush: css">input[type="color"] {
  border: 0;
  padding: 0;
}</pre>

<p>However, a custom solution is the only way to get anything significantly different.</p>

<h3 id="File_input_types">File input types</h3>

<p>Inputs of type file are generally OK — as you saw in our example, it is fairly easy to create something that fits in OK with the rest of the page — the output line that is part of the control will inherit the parent font if you tell the input to do so, and you can style the custom list of file names and sizes in any way you want; we created it after all.</p>

<p>The only problem with file pickers is that the button provided that you press to open the file picker is completely unstyleable — it can't be sized or colored, and it won't even accept a different font.</p>

<p>One way around this is to take advantage of the fact that if you have a label associated with a form control, clicking the label will activate the control. So you could hide the actual from input using something like this:</p>

<pre class="brush: css">input[type="file"] {
  height: 0;
  padding: 0;
  opacity: 0;
}</pre>

<p>And then style the label to act like a button, which when pressed will open the file picker as expected:</p>

<pre class="brush: css">label[for="file"] {
  box-shadow: 1px 1px 3px #ccc;
  background: linear-gradient(to bottom, #eee, #ccc);
  border: 1px solid rgb(169, 169, 169);
  border-radius: 5px;
  text-align: center;
  line-height: 1.5;
}

label[for="file"]:hover {
  background: linear-gradient(to bottom, #fff, #ddd);
}

label[for="file"]:active {
  box-shadow: inset 1px 1px 3px #ccc;
}</pre>

<p>You can see the result of the above CSS styling in the below live example (see also <a class="external" href="https://mdn.github.io/learning-area/html/forms/styling-examples/styled-file-picker.html" rel="noopener">styled-file-picker.html</a> live, and the <a class="new" href="/enhttps://github.com/mdn/learning-area/blob/master/html/forms/styling-examples/styled-file-picker.html-US/docs/" rel="nofollow">source code</a>).</p>

<p><iframe class="live-sample-frame" frameborder="0" height="200" src="https://mdn.github.io/learning-area/html/forms/styling-examples/styled-file-picker.html" width="100%"></iframe></p>

<h3 id="Meters_and_progress_bars">Meters and progress bars</h3>

<p><code><a href="/en-US/docs/Web/HTML/Element/meter">&lt;meter&gt;</a></code> and <code><a href="/en-US/docs/Web/HTML/Element/progress">&lt;progress&gt;</a></code> are possibly the worst of the lot. As you saw in the earlier example, we can set them to a desired width relatively accurately. But beyond that, they are really difficult to style in any way. They don't handle height settings consistently between each other and between browsers, you can color the background, but not the foreground bar, and setting <code>appearance: none</code> on them makes things worse, not better.</p>

<p>It is easier to just create your own custom solution for these features, if you want to be able to control the styling, or use a third party colution such as <a class="external" href="http://kimmobrunfeldt.github.io/progressbar.js/#examples" rel="noopener">progressbar.js</a>.</p>

<h2 id="The_road_to_nicer_forms_useful_libraries_and_polyfills">The road to nicer forms: useful libraries and polyfills</h2>

<p>As we've mentioned above a few times, if you want to gain full control over the "ugly" control types, you have no choice but to rely on JavaScript. In the article <a href="/en-US/docs/Learn/Forms/How_to_build_custom_form_controls">How to build custom form controls</a> you will see how to do it on your own, but there are some very useful libraries out there that can help you:</p>

<ul>
	<li><a class="external" href="http://sprawsm.com/uni-form/" rel="external noopener">Uni-form</a> is a framework that standardizes form markup, styling it with CSS. It also offers a few additional features when used with jQuery, but that's optional.</li>
	<li><a class="external" href="http://formalize.me/" rel="external noopener">Formalize</a> is an extension to common JavaScript frameworks (such as jQuery, Dojo, YUI, etc.) that helps to normalize and customize your forms.</li>
	<li><a class="external" href="http://www.emblematiq.com/lab/niceforms/" rel="external noopener">Niceforms</a> is a standalone JavaScript method that provides complete customization of web forms. You can use some of the built in themes, or create your own.</li>
</ul>

<p>The following libraries aren't just about forms, but they have very interesting features for dealing with HTML forms:</p>

<ul>
	<li><a class="external" href="http://jqueryui.com/" rel="external noopener">jQuery UI</a> offers customizable widgets such as date pickers (with special attention given to accessibility).</li>
	<li><a class="external" href="http://twitter.github.com/bootstrap/base-css.html#forms" rel="external noopener">Twitter Bootstrap</a> can help normalize your forms.</li>
	<li><a class="external" href="https://afarkas.github.io/webshim/demos/" rel="external noopener">WebShim</a> is a huge tool that can help you deal with browser HTML5 support. The web forms part can be really helpful.</li>
</ul>

<p>Remember that CSS and JavaScript can have side effects. So if you choose to use one of those libraries, you should always have robust fallback HTML in case the script fails. There are many reasons why scripts may fail, especially in the mobile world, and you need to design your Web site or app to handle these cases as best as possible.</p>

<h2 id="Summary">Summary</h2>

<p>While there are still difficulties using CSS with HTML forms, there are ways to get around many of the problems. There are no clean, universal solutions, but modern browsers offer new possibilities. For now, the best solution is to learn more about the way the different browsers support CSS when applied to HTML form controls.</p>

<p>In the next article of this module, we will explore the different <a href="/en-US/docs/Learn/Forms/UI_pseudo-classes">UI pseudo-classes</a> available to us in modern browsers for styling forms in different states.</p>

<div class="prevnext">
    <div><a href="/en-US/docs/Learn/Forms/Styling_web_forms" style="float: left; width: 20%; text-align: left;"><span style=""><i class="icon-arrow-left"></i> Previous </span></a><a href="/en-US/docs/Learn/Forms" style="float: left; width: 60%; text-align: center;"><span style=""><i class="icon-arrow-up"></i> Overview: Forms</span></a><a href="/en-US/docs/Learn/Forms/UI_pseudo-classes" style="width: 20%; float: right; text-align: right;"><span style=""> Next  <i class="icon-arrow-right"></i></span></a></div>
    <p> </p>
</div>

<h2 id="In_this_module">In this module</h2>

<ul>
	<li><a href="/en-US/docs/Learn/Forms/Your_first_form">Your first form</a></li>
	<li><a href="/en-US/docs/Learn/Forms/How_to_structure_a_web_form">How to structure a web form</a></li>
	<li><a href="/en-US/docs/Learn/Forms/Basic_native_form_controls">Basic native form controls</a></li>
	<li><a href="/en-US/docs/Learn/Forms/HTML5_input_types">The HTML5 input types</a></li>
	<li><a href="/en-US/docs/Learn/Forms/Other_form_controls">Other form controls</a></li>
	<li><a href="/en-US/docs/Learn/Forms/Styling_web_forms">Styling web forms</a></li>
	<li><a href="/en-US/docs/Learn/Forms/Advanced_form_styling">Advanced form styling</a></li>
	<li><a href="/en-US/docs/Learn/Forms/UI_pseudo-classes">UI pseudo-classes</a></li>
	<li><a href="/en-US/docs/Learn/Forms/Form_validation">Client-side form validation</a></li>
	<li><a href="/en-US/docs/Learn/Forms/Sending_and_retrieving_form_data">Sending form data</a></li>
</ul>

<h3 id="Advanced_Topics">Advanced Topics</h3>

<ul>
	<li><a href="/en-US/docs/Learn/Forms/How_to_build_custom_form_controls">How to build custom form controls</a></li>
	<li><a href="/en-US/docs/Learn/Forms/Sending_forms_through_JavaScript">Sending forms through JavaScript</a></li>
	<li><a href="/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_widgets">Property compatibility table for form widgets</a></li>
</ul></article><div class="metadata"><section class="document-meta"><header class="visually-hidden"><h4>Metadata</h4></header> <ul><li class="last-modified"><b>Last modified:</b> <time dateTime="2020-04-30T23:03:37.171748">Apr 30, 2020</time>,<!-- --> <a href="https://wiki.developer.mozilla.org/en-US/docs/Learn/Forms/Advanced_form_styling$history" rel="nofollow">by MDN contributors</a></li></ul></section></div></div><div class="sidebar"><div class="quick-links"><div class="quick-links-head sidebar-heading">Related Topics</div><div>

<ol>
  <li data-default-state="closed"><a href="/en-US/docs/Learn/Getting_started_with_the_web"><strong>Complete beginners start here!</strong></a></li>
  <li class="toggle">
      <details>
          <summary>Getting started with the Web</summary>
          <ol>
            <li><a href="/en-US/docs/Learn/Getting_started_with_the_web">Getting started with the Web overview</a></li>
            <li><a href="/en-US/docs/Learn/Getting_started_with_the_web/Installing_basic_software">Installing basic software</a></li>
            <li><a href="/en-US/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like">What will your website look like?</a></li>
            <li><a href="/en-US/docs/Learn/Getting_started_with_the_web/Dealing_with_files">Dealing with files</a></li>
            <li><a href="/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics">HTML basics</a></li>
            <li><a href="/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics">CSS basics</a></li>
            <li><a href="/en-US/docs/Learn/Getting_started_with_the_web/JavaScript_basics">JavaScript basics</a></li>
            <li><a href="/en-US/docs/Learn/Getting_started_with_the_web/Publishing_your_website">Publishing your website</a></li>
            <li><a href="/en-US/docs/Learn/Getting_started_with_the_web/How_the_Web_works">How the Web works</a></li>
          </ol>
      </details>
  </li>
  <li data-default-state="closed"><a href="/en-US/docs/Learn/HTML"><strong>HTML — Structuring the Web</strong></a></li>
  <li class="toggle">
      <details>
          <summary>Introduction to HTML</summary>
          <ol>
            <li><a href="/en-US/docs/Learn/HTML/Introduction_to_HTML">Introduction to HTML overview</a></li>
            <li><a href="/en-US/docs/Learn/HTML/Introduction_to_HTML/Getting_started">Getting started with HTML</a></li>
            <li><a href="/en-US/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML">What's in the head? Metadata in HTML</a></li>
            <li><a href="/en-US/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals">HTML text fundamentals</a></li>
            <li><a href="/en-US/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks">Creating hyperlinks</a></li>
            <li><a href="/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting">Advanced text formatting</a></li>
            <li><a href="/en-US/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure">Document and website structure</a></li>
            <li><a href="/en-US/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML">Debugging HTML</a></li>
            <li><a href="/en-US/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter">Assessment: Marking up a letter</a></li>
            <li><a href="/en-US/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content">Assessment: Structuring a page of content</a></li>
          </ol>
      </details>
  </li>
  <li class="toggle">
      <details>
          <summary>Multimedia and embedding</summary>
          <ol>
            <li><a href="/en-US/docs/Learn/HTML/Multimedia_and_embedding">Multimedia and embedding overview</a></li>
            <li><a href="/en-US/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML">Images in HTML</a></li>
            <li><a href="/en-US/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content">Video and audio content</a></li>
            <li><a href="/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies">From object to iframe — other embedding technologies</a></li>
            <li><a href="/en-US/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web">Adding vector graphics to the Web</a></li>
            <li><a href="/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images">Responsive images</a></li>
            <li><a href="/en-US/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page">Assessment: Mozilla splash page</a></li>
          </ol>
      </details>
  </li>
  <li class="toggle">
      <details>
          <summary>HTML tables</summary>
          <ol>
            <li><a href="/en-US/docs/Learn/HTML/Tables">HTML tables overview</a></li>
            <li><a href="/en-US/docs/Learn/HTML/Tables/Basics">HTML table basics</a></li>
            <li><a href="/en-US/docs/Learn/HTML/Tables/Advanced">HTML Table advanced features and accessibility</a></li>
            <li><a href="/en-US/docs/Learn/HTML/Tables/Structuring_planet_data">Assessment: Structuring planet data</a></li>
          </ol>
      </details>
  </li>
  <li data-default-state="closed"><a href="/en-US/docs/Learn/CSS"><strong>CSS — Styling the Web</strong></a></li>
  <li class="toggle">
      <details>
          <summary>CSS first steps</summary>
          <ol>
            <li><a href="/en-US/docs/Learn/CSS/First_steps">CSS first steps overview</a></li>
            <li><a href="/en-US/docs/Learn/CSS/First_steps/What_is_CSS">What is CSS?</a></li>
            <li><a href="/en-US/docs/Learn/CSS/First_steps/Getting_started">Getting started with CSS</a></li>
            <li><a href="/en-US/docs/Learn/CSS/First_steps/How_CSS_is_structured">How CSS is structured</a></li>
            <li><a href="/en-US/docs/Learn/CSS/First_steps/How_CSS_works">How CSS works</a></li>
            <li><a href="/en-US/docs/Learn/CSS/First_steps/Using_your_new_knowledge">Using your new knowledge</a></li>
          </ol>
      </details>
  </li>
  <li class="toggle">
      <details>
          <summary>CSS building blocks</summary>
          <ol>
            <li><a href="/en-US/docs/Learn/CSS/Building_blocks">CSS building blocks overview</a></li>
            <li><a href="/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance">Cascade and inheritance</a></li>
            <li><a href="/en-US/docs/Learn/CSS/Building_blocks/Selectors">CSS selectors</a></li>
            <li><a href="/en-US/docs/Learn/CSS/Building_blocks/The_box_model">The box model</a></li>
            <li><a href="/en-US/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders">Backgrounds and borders</a></li>
            <li><a href="/en-US/docs/Learn/CSS/Building_blocks/Handling_different_text_directions">Handling different text directions</a></li>
            <li><a href="/en-US/docs/Learn/CSS/Building_blocks/Overflowing_content">Overflowing content</a></li>
            <li><a href="/en-US/docs/Learn/CSS/Building_blocks/Values_and_units">Values and units</a></li>
            <li><a href="/en-US/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS">Sizing items in CSS</a></li>
            <li><a href="/en-US/docs/Learn/CSS/Building_blocks/Images_media_form_elements">Images, media, and form elements</a></li>
            <li><a href="/en-US/docs/Learn/CSS/Building_blocks/Styling_tables">Styling tables</a></li>
            <li><a href="/en-US/docs/Learn/CSS/Building_blocks/Debugging_CSS">Debugging CSS</a></li>
            <li><a href="/en-US/docs/Learn/CSS/Building_blocks/Organizing">Organizing your CSS</a></li>
      </ol></details>
  </li>
  <li class="toggle">
      <details>
          <summary>Styling text</summary>
          <ol>
            <li><a href="/en-US/docs/Learn/CSS/Styling_text">Styling text overview</a></li>
            <li><a href="/en-US/docs/Learn/CSS/Styling_text/Fundamentals">Fundamental text and font styling</a></li>
            <li><a href="/en-US/docs/Learn/CSS/Styling_text/Styling_lists">Styling lists</a></li>
            <li><a href="/en-US/docs/Learn/CSS/Styling_text/Styling_links">Styling links</a></li>
            <li><a href="/en-US/docs/Learn/CSS/Styling_text/Web_fonts">Web fonts</a></li>
            <li><a href="/en-US/docs/Learn/CSS/Styling_text/Typesetting_a_homepage">Assessment: Typesetting a community school homepage</a></li>
          </ol>
      </details>
  </li>
  <li class="toggle">
      <details>
          <summary>CSS layout</summary>
          <ol>
            <li><a href="/en-US/docs/Learn/CSS/CSS_layout">CSS layout overview</a></li>
            <li><a href="/en-US/docs/Learn/CSS/CSS_layout/Introduction">Introduction</a></li>
            <li><a href="/en-US/docs/Learn/CSS/CSS_layout/Normal_Flow">Normal Flow</a></li>
            <li><a href="/en-US/docs/Learn/CSS/CSS_layout/Flexbox">Flexbox</a></li>
            <li><a href="/en-US/docs/Learn/CSS/CSS_layout/Grids">Grids</a></li>
            <li><a href="/en-US/docs/Learn/CSS/CSS_layout/Floats">Floats</a></li>
            <li><a href="/en-US/docs/Learn/CSS/CSS_layout/Positioning">Positioning</a></li>
            <li><a href="/en-US/docs/Learn/CSS/CSS_layout/Multiple-column_Layout">Multiple-column Layout</a></li>
            <li><a href="/en-US/docs/Learn/CSS/CSS_layout/Responsive_Design">Responsive design</a></li>
            <li><a href="/en-US/docs/Learn/CSS/CSS_layout/Media_queries">Beginner's guide to media queries</a></li>
            <li><a href="/en-US/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods">Legacy Layout Methods</a></li>
            <li><a href="/en-US/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers">Supporting Older Browsers</a></li>
            <li><a href="/en-US/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension">Fundamental Layout Comprehension</a></li>
          </ol>
      </details>
  </li>
  <li data-default-state="closed"><a href="/en-US/docs/Learn/JavaScript"><strong>JavaScript — Dynamic client-side scripting</strong></a></li>
  <li class="toggle">
      <details>
          <summary>JavaScript first steps</summary>
          <ol>
            <li><a href="/en-US/docs/Learn/JavaScript/First_steps">JavaScript first steps overview</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/First_steps/What_is_JavaScript">What is JavaScript?</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/First_steps/A_first_splash">A first splash into JavaScript</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong">What went wrong? Troubleshooting JavaScript</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/First_steps/Variables">Storing the information you need — Variables</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/First_steps/Math">Basic math in JavaScript — Numbers and operators</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/First_steps/Strings">Handling text — Strings in JavaScript</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/First_steps/Useful_string_methods">Useful string methods</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/First_steps/Arrays">Arrays</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/First_steps/Silly_story_generator">Assessment: Silly story generator</a></li>
          </ol>
      </details>
  </li>
  <li class="toggle">
      <details>
          <summary>JavaScript building blocks</summary>
          <ol>
            <li><a href="/en-US/docs/Learn/JavaScript/Building_blocks">JavaScript building blocks overview</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/Building_blocks/conditionals">Making decisions in your code — Conditionals</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/Building_blocks/Looping_code">Looping code</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/Building_blocks/Functions">Functions — Reusable blocks of code</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/Building_blocks/Build_your_own_function">Build your own function</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/Building_blocks/Return_values">Function return values</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/Building_blocks/Events">Introduction to events</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/Building_blocks/Image_gallery">Assessment: Image gallery</a></li>
          </ol>
      </details>
  </li>
  <li class="toggle">
      <details>
          <summary>Introducing JavaScript objects</summary>
          <ol>
            <li><a href="/en-US/docs/Learn/JavaScript/Objects">Introducing JavaScript objects overview</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/Objects/Basics">Object basics</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/Objects/Object-oriented_JS">Object-oriented JavaScript for beginners</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/Objects/Object_prototypes">Object prototypes</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/Objects/Inheritance">Inheritance in JavaScript</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/Objects/JSON">Working with JSON data</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/Objects/Object_building_practice">Object building practice</a></li>
            <li><a href="/en-US/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features">Assessment: Adding features to our bouncing balls demo</a></li>
          </ol>
      </details>
  </li>
  <li class="toggle">
    <details>
        <summary>Asynchronous JavaScript</summary>
        <ol>
          <li><a href="/en-US/docs/Learn/JavaScript/Asynchronous">Asynchronous JavaScript overview</a></li>
          <li><a href="/en-US/docs/Learn/JavaScript/Asynchronous/Concepts">General asynchronous programming concepts</a></li>
          <li><a href="/en-US/docs/Learn/JavaScript/Asynchronous/Introducing">Introducing asynchronous JavaScript</a></li>
          <li><a href="/en-US/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals">Cooperative asynchronous Java​Script: Timeouts and intervals</a></li>
          <li><a href="/en-US/docs/Learn/JavaScript/Asynchronous/Promises">Graceful asynchronous programming with Promises</a></li>
          <li><a href="/en-US/docs/Learn/JavaScript/Asynchronous/Async_await">Making asynchronous programming easier with async and await</a></li>
          <li><a href="/en-US/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach">Choosing the right approach</a></li>
        </ol>
    </details>
  </li>
  <li class="toggle">
    <details>
        <summary>Client-side web APIs</summary>
        <ol>
          <li><a href="/en-US/docs/Learn/JavaScript/Client-side_web_APIs">Client-side web APIs</a></li>
          <li><a href="/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Introduction">Introduction to web APIs</a></li>
          <li><a href="/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents">Manipulating documents</a></li>
          <li><a href="/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data">Fetching data from the server</a></li>
          <li><a href="/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs">Third party APIs</a></li>
          <li><a href="/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics">Drawing graphics</a></li>
          <li><a href="/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs">Video and audio APIs</a></li>
          <li><a href="/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage">Client-side storage</a></li>
        </ol>
    </details>
  </li>
  <li><a href="/en-US/docs/Learn/Forms"><strong>Web forms — Working with user data</strong></a></li>
  <li class="toggle">
    <details open>
        <summary>Core forms learning pathway</summary>
        <ol>
          <li><a href="/en-US/docs/Learn/Forms">Web forms overview</a></li>
          <li><a href="/en-US/docs/Learn/Forms/Your_first_form">Your first form</a></li>
          <li><a href="/en-US/docs/Learn/Forms/How_to_structure_a_web_form">How to structure a web form</a></li>
          <li><a href="/en-US/docs/Learn/Forms/Basic_native_form_controls">Basic native form controls</a></li>
          <li><a href="/en-US/docs/Learn/Forms/HTML5_input_types">The HTML5 input types</a></li>
          <li><a href="/en-US/docs/Learn/Forms/Other_form_controls">Other form controls</a></li>
          <li><a href="/en-US/docs/Learn/Forms/Styling_web_forms">Styling web forms</a></li>
          <li><a href="/en-US/docs/Learn/Forms/Advanced_form_styling">Advanced form styling</a></li>
          <li><a href="/en-US/docs/Learn/Forms/UI_pseudo-classes">UI pseudo-classes</a></li>
          <li><a href="/en-US/docs/Learn/Forms/Form_validation">Client-side form validation</a></li>
          <li><a href="/en-US/docs/Learn/Forms/Sending_and_retrieving_form_data">Sending form data</a></li>
        </ol>
    </details>
  </li>
  <li class="toggle">
    <details open>
        <summary>Advanced forms articles</summary>
        <ol>
          <li><a href="/en-US/docs/Learn/Forms/How_to_build_custom_form_controls">How to build custom form controls</a></li>
          <li><a href="/en-US/docs/Learn/Forms/Sending_forms_through_JavaScript">Sending forms through JavaScript</a></li>
          <li><a href="/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls">CSS property compatibility table for form controls</a></li>
        </ol>
    </details>
  </li>
  <li><a href="/en-US/docs/Learn/Accessibility"><strong>Accessibility — Make the web usable by everyone</strong></a></li>
  <li class="toggle">
    <details>
        <summary>Accessibility guides</summary>
        <ol>
          <li><a href="/en-US/docs/Learn/Accessibility">Accessibility overview</a></li>
          <li><a href="/en-US/docs/Learn/Accessibility/What_is_accessibility">What is accessibility?</a></li>
          <li><a href="/en-US/docs/Learn/Accessibility/HTML">HTML: A good basis for accessibility</a></li>
          <li><a href="/en-US/docs/Learn/Accessibility/CSS_and_JavaScript">CSS and JavaScript accessibility best practices</a></li>
          <li><a href="/en-US/docs/Learn/Accessibility/WAI-ARIA_basics">WAI-ARIA basics</a></li>
          <li><a href="/en-US/docs/Learn/Accessibility/Multimedia">Accessible multimedia</a></li>
          <li><a href="/en-US/docs/Learn/Accessibility/Mobile">Mobile accessibility</a></li>
        </ol>
    </details>
  </li>
  <li class="toggle">
    <details>
        <summary>Accessibility assessment</summary>
        <ol>
            <li><a href="/en-US/docs/Learn/Accessibility/Accessibility_troubleshooting">Assessment: Accessibility troubleshooting</a></li>
        </ol>
    </details>
  </li>
  <li><a href="/en-US/docs/Learn/Tools_and_testing"><strong>Tools and testing</strong></a></li>
  <li class="toggle">
    <details>
        <summary>Cross browser testing</summary>
        <ol>
          <li><a href="/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing">Cross browser testing overview</a></li>
          <li><a href="/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction">Introduction to cross browser testing</a></li>
          <li><a href="/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies">Strategies for carrying out testing</a></li>
          <li><a href="/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS">Handling common HTML and CSS problems</a></li>
          <li><a href="/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript">Handling common JavaScript problems</a></li>
          <li><a href="/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility">Handling common accessibility problems</a></li>
          <li><a href="/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection">Implementing feature detection</a></li>
          <li><a href="/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing">Introduction to automated testing</a></li>
          <li><a href="/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment">Setting up your own test automation environment</a></li>
        </ol>
    </details>
  </li>
  <li class="toggle">
    <details>
        <summary>Git and GitHub</summary>
        <ol>
          <li><a href="/en-US/docs/Learn/Tools_and_testing/GitHub">Git and GitHub overview</a></li>
          <li><a class="external" href="https://guides.github.com/activities/hello-world/" rel="noopener">Hello World</a></li>
          <li><a class="external" href="https://guides.github.com/introduction/git-handbook/" rel="noopener">Git Handbook</a></li>
          <li><a class="external" href="https://guides.github.com/activities/forking/" rel="noopener">Forking Projects</a></li>
          <li><a class="external" href="https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests" rel="noopener">About pull requests</a></li>
          <li><a class="external" href="https://guides.github.com/features/issues/" rel="noopener">Mastering Issues</a></li>
        </ol>
    </details>
  </li>
  <li class="toggle">
    <details>
        <summary>Understanding client-side web development tools</summary>
        <ol>
          <li><a href="/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools">Client-side web development tools index</a></li>
          <li><a href="/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview">Client-side tooling overview</a></li>
          <li><a href="/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line">Command line crash course</a></li>
          <li><a href="/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management">Package management basics</a></li>
          <li><a href="/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain">Introducing a complete toolchain</a></li>
          <li><a href="/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment">Deploying our app</a></li>
        </ol>
    </details>
  </li>
  <li data-default-state="closed"><a href="/en-US/docs/Learn/Server-side"><strong>Server-side website programming</strong></a></li>
  <li class="toggle">
    <details>
        <summary>First steps</summary>
        <ol>
          <li><a href="/en-US/docs/Learn/Server-side/First_steps">First steps overview</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/First_steps/Introduction">Introduction to the server-side</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview">Client-Server overview</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/First_steps/Web_frameworks">Server-side web frameworks</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/First_steps/Website_security">Website security</a></li>
        </ol>
    </details>
  </li>
  <li class="toggle">
    <details>
        <summary>Django web framework (Python)</summary>
        <ol>
          <li><a href="/en-US/docs/Learn/Server-side/Django">Django web framework (Python) overview</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Django/Introduction">Introduction</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Django/development_environment">Setting up a development environment</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Django/Tutorial_local_library_website">Tutorial: The Local Library website</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Django/skeleton_website">Tutorial Part 2: Creating a skeleton website</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Django/Models">Tutorial Part 3: Using models</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Django/Admin_site">Tutorial Part 4: Django admin site</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Django/Home_page">Tutorial Part 5: Creating our home page</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Django/Generic_views">Tutorial Part 6: Generic list and detail views</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Django/Sessions">Tutorial Part 7: Sessions framework</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Django/Authentication">Tutorial Part 8: User authentication and permissions</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Django/Forms">Tutorial Part 9: Working with forms</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Django/Testing">Tutorial Part 10: Testing a Django web application</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Django/Deployment">Tutorial Part 11: Deploying Django to production</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Django/web_application_security">Web application security</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Django/django_assessment_blog">Assessment: DIY mini blog</a></li>
        </ol>
    </details>
  </li>
  <li class="toggle">
    <details>
        <summary>Express Web Framework (node.js/JavaScript)</summary>
        <ol>
          <li><a href="/en-US/docs/Learn/Server-side/Express_Nodejs">Express Web Framework (Node.js/JavaScript) overview</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Express_Nodejs/Introduction">Express/Node introduction</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Express_Nodejs/development_environment">Setting up a Node (Express) development environment</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website">Express tutorial: The Local Library website</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Express_Nodejs/skeleton_website">Express Tutorial Part 2: Creating a skeleton website</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Express_Nodejs/mongoose">Express Tutorial Part 3: Using a database (with Mongoose)</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Express_Nodejs/routes">Express Tutorial Part 4: Routes and controllers</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data">Express Tutorial Part 5: Displaying library data</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Express_Nodejs/forms">Express Tutorial Part 6: Working with forms</a></li>
          <li><a href="/en-US/docs/Learn/Server-side/Express_Nodejs/deployment">Express Tutorial Part 7: Deploying to production</a></li>
        </ol>
    </details>
  </li>
  <li><a href="#"><strong>Further resources</strong></a></li>
  <li class="toggle">
    <details>
        <summary>Common questions</summary>
        <ol>
          <li><a href="/en-US/docs/Learn/HTML/Howto">HTML questions</a></li>
          <li><a href="/en-US/docs/Learn/CSS/Howto">CSS questions</a></li>
          <li><a href="/en-US/docs/Learn/JavaScript/Howto">JavaScript questions</a></li>
          <li><a href="/en-US/docs/Learn/Common_questions#How_the_Web_works">How the Web works</a></li>
          <li><a href="/en-US/docs/Learn/Common_questions#Tools_and_setup">Tools and setup</a></li>
          <li><a href="/en-US/docs/Learn/Common_questions#Design_and_accessibility">Design and accessibility</a></li>
        </ol>
    </details>
  </li>
  <li data-default-state="closed"><a href="/en-US/docs/Learn/How_to_contribute">How to contribute</a></li>
</ol>

</div></div></div></div></main><section class="newsletter-container"><div id="newsletter-form-container" class="newsletter"><form class="newsletter-form nodisable" name="newsletter-form"><section class="newsletter-head"><h2 class="newsletter-teaser">Learn the best of web development</h2><p class="newsletter-description">Get the latest and greatest from MDN delivered straight to your inbox.</p><p class="hidden" aria-hidden="true">The newsletter is offered in English only at the moment.</p></section><fieldset class="newsletter-fields"><input type="hidden" name="fmt" value="H"/><input type="hidden" name="newsletters" value="app-dev"/><div class="form-group newsletter-group-email"><label for="newsletter-email-input" class="form-label offscreen">E-mail</label><input type="email" id="newsletter-email-input" name="email" class="form-input newsletter-input-email" placeholder="you@example.com" required=""/></div><div id="newsletter-privacy" class="form-group form-group-agree newsletter-group-privacy" aria-hidden="false"><input type="checkbox" id="newsletter-privacy-input" name="privacy" required=""/><label for="newsletter-privacy-input">I’m okay with Mozilla handling my info as explained in this <a href="https://www.mozilla.org/privacy/">Privacy Policy</a>.</label></div><div class="newsletter-group-submit"><button id="newsletter-submit" type="submit" class="button neutral newsletter-submit">Sign up now</button></div></fieldset></form><button type="button" class="only-icon newsletter-hide" aria-controls="newsletter-form-container"><span>Hide Newsletter Sign-up</span><svg class="icon icon-close" xmlns="http://www.w3.org/2000/svg" role="presentation" viewBox="0 0 24 28"><path d="M20.281 20.656c0 .391-.156.781-.438 1.062l-2.125 2.125c-.281.281-.672.438-1.062.438s-.781-.156-1.062-.438L11 19.249l-4.594 4.594c-.281.281-.672.438-1.062.438s-.781-.156-1.062-.438l-2.125-2.125c-.281-.281-.438-.672-.438-1.062s.156-.781.438-1.062L6.751 15l-4.594-4.594c-.281-.281-.438-.672-.438-1.062s.156-.781.438-1.062l2.125-2.125c.281-.281.672-.438 1.062-.438s.781.156 1.062.438L11 10.751l4.594-4.594c.281-.281.672-.438 1.062-.438s.781.156 1.062.438l2.125 2.125c.281.281.438.672.438 1.062s-.156.781-.438 1.062L15.249 15l4.594 4.594c.281.281.438.672.438 1.062z"></path></svg></button></div></section><footer id="nav-footer" class="nav-footer" data-testid="footer"><div class="center"><a href="/en-US/" class="nav-footer-logo">MDN Web Docs</a><div class="footer-group footer-group-mdn"><h2 class="footer-title">MDN</h2><ul class="footer-list"><li><a href="/en-US/docs/Web">Web Technologies</a></li><li><a href="/en-US/docs/Learn">Learn Web Development</a></li><li><a href="/en-US/docs/MDN/About">About MDN</a></li><li><a href="/en-US/docs/MDN/Feedback">Feedback</a></li><li class="footer-social"><a href="https://twitter.com/mozdevnet"><svg class="icon icon-twitter" xmlns="http://www.w3.org/2000/svg" width="26" height="28" aria-label="Twitter" role="img" focusable="false"><path d="M25.312 6.375a10.85 10.85 0 01-2.531 2.609c.016.219.016.438.016.656 0 6.672-5.078 14.359-14.359 14.359-2.859 0-5.516-.828-7.75-2.266.406.047.797.063 1.219.063 2.359 0 4.531-.797 6.266-2.156a5.056 5.056 0 01-4.719-3.5c.313.047.625.078.953.078.453 0 .906-.063 1.328-.172a5.048 5.048 0 01-4.047-4.953v-.063a5.093 5.093 0 002.281.641 5.044 5.044 0 01-2.25-4.203c0-.938.25-1.797.688-2.547a14.344 14.344 0 0010.406 5.281 5.708 5.708 0 01-.125-1.156 5.045 5.045 0 015.047-5.047 5.03 5.03 0 013.687 1.594 9.943 9.943 0 003.203-1.219 5.032 5.032 0 01-2.219 2.781c1.016-.109 2-.391 2.906-.781z"></path></svg></a></li><li class="footer-social"><a href="https://github.com/mdn/"><svg class="icon icon-github" xmlns="http://www.w3.org/2000/svg" width="24" height="28" aria-label="GitHub" role="img" focusable="false"><path d="M12 2c6.625 0 12 5.375 12 12 0 5.297-3.437 9.797-8.203 11.391-.609.109-.828-.266-.828-.578 0-.391.016-1.687.016-3.297 0-1.125-.375-1.844-.812-2.219 2.672-.297 5.484-1.313 5.484-5.922 0-1.313-.469-2.375-1.234-3.219.125-.313.531-1.531-.125-3.187-1-.313-3.297 1.234-3.297 1.234a11.28 11.28 0 00-6 0S6.704 6.656 5.704 6.969c-.656 1.656-.25 2.875-.125 3.187-.766.844-1.234 1.906-1.234 3.219 0 4.594 2.797 5.625 5.469 5.922-.344.313-.656.844-.766 1.609-.688.313-2.438.844-3.484-1-.656-1.141-1.844-1.234-1.844-1.234-1.172-.016-.078.734-.078.734.781.359 1.328 1.75 1.328 1.75.703 2.141 4.047 1.422 4.047 1.422 0 1 .016 1.937.016 2.234 0 .313-.219.688-.828.578C3.439 23.796.002 19.296.002 13.999c0-6.625 5.375-12 12-12zM4.547 19.234c.031-.063-.016-.141-.109-.187-.094-.031-.172-.016-.203.031-.031.063.016.141.109.187.078.047.172.031.203-.031zm.484.532c.063-.047.047-.156-.031-.25-.078-.078-.187-.109-.25-.047-.063.047-.047.156.031.25.078.078.187.109.25.047zm.469.703c.078-.063.078-.187 0-.297-.063-.109-.187-.156-.266-.094-.078.047-.078.172 0 .281s.203.156.266.109zm.656.656c.063-.063.031-.203-.063-.297-.109-.109-.25-.125-.313-.047-.078.063-.047.203.063.297.109.109.25.125.313.047zm.891.391c.031-.094-.063-.203-.203-.25-.125-.031-.266.016-.297.109s.063.203.203.234c.125.047.266 0 .297-.094zm.984.078c0-.109-.125-.187-.266-.172-.141 0-.25.078-.25.172 0 .109.109.187.266.172.141 0 .25-.078.25-.172zm.906-.156c-.016-.094-.141-.156-.281-.141-.141.031-.234.125-.219.234.016.094.141.156.281.125s.234-.125.219-.219z"></path></svg></a></li></ul></div><a href="https://mozilla.org" class="nav-footer-mozilla">Mozilla</a><div class="footer-group footer-group-mozilla"><h2 class="footer-title">Mozilla</h2><ul class="footer-list"><li><a href="https://www.mozilla.org/about/">About</a></li><li><a href="https://www.mozilla.org/contact/">Contact Us</a></li><li><a href="https://www.mozilla.org/firefox/?utm_source=developer.mozilla.org&amp;utm_campaign=footer&amp;utm_medium=referral">Firefox</a></li><li class="footer-social"><a href="https://twitter.com/mozilla"><svg class="icon icon-twitter" xmlns="http://www.w3.org/2000/svg" width="26" height="28" aria-label="Twitter" role="img" focusable="false"><path d="M25.312 6.375a10.85 10.85 0 01-2.531 2.609c.016.219.016.438.016.656 0 6.672-5.078 14.359-14.359 14.359-2.859 0-5.516-.828-7.75-2.266.406.047.797.063 1.219.063 2.359 0 4.531-.797 6.266-2.156a5.056 5.056 0 01-4.719-3.5c.313.047.625.078.953.078.453 0 .906-.063 1.328-.172a5.048 5.048 0 01-4.047-4.953v-.063a5.093 5.093 0 002.281.641 5.044 5.044 0 01-2.25-4.203c0-.938.25-1.797.688-2.547a14.344 14.344 0 0010.406 5.281 5.708 5.708 0 01-.125-1.156 5.045 5.045 0 015.047-5.047 5.03 5.03 0 013.687 1.594 9.943 9.943 0 003.203-1.219 5.032 5.032 0 01-2.219 2.781c1.016-.109 2-.391 2.906-.781z"></path></svg></a></li><li class="footer-social"><a href="https://www.instagram.com/mozillagram/"><svg class="icon icon-instagram" xmlns="http://www.w3.org/2000/svg" width="24" height="28" aria-label="Instagram" role="img" focusable="false"><path d="M16 14c0-2.203-1.797-4-4-4s-4 1.797-4 4 1.797 4 4 4 4-1.797 4-4zm2.156 0c0 3.406-2.75 6.156-6.156 6.156S5.844 17.406 5.844 14 8.594 7.844 12 7.844s6.156 2.75 6.156 6.156zm1.688-6.406c0 .797-.641 1.437-1.437 1.437S16.97 8.39 16.97 7.594s.641-1.437 1.437-1.437 1.437.641 1.437 1.437zM12 4.156c-1.75 0-5.5-.141-7.078.484-.547.219-.953.484-1.375.906s-.688.828-.906 1.375c-.625 1.578-.484 5.328-.484 7.078s-.141 5.5.484 7.078c.219.547.484.953.906 1.375s.828.688 1.375.906c1.578.625 5.328.484 7.078.484s5.5.141 7.078-.484c.547-.219.953-.484 1.375-.906s.688-.828.906-1.375c.625-1.578.484-5.328.484-7.078s.141-5.5-.484-7.078c-.219-.547-.484-.953-.906-1.375s-.828-.688-1.375-.906C17.5 4.015 13.75 4.156 12 4.156zM24 14c0 1.656.016 3.297-.078 4.953-.094 1.922-.531 3.625-1.937 5.031s-3.109 1.844-5.031 1.937c-1.656.094-3.297.078-4.953.078s-3.297.016-4.953-.078c-1.922-.094-3.625-.531-5.031-1.937S.173 20.875.08 18.953C-.014 17.297.002 15.656.002 14s-.016-3.297.078-4.953c.094-1.922.531-3.625 1.937-5.031s3.109-1.844 5.031-1.937c1.656-.094 3.297-.078 4.953-.078s3.297-.016 4.953.078c1.922.094 3.625.531 5.031 1.937s1.844 3.109 1.937 5.031C24.016 10.703 24 12.344 24 14z"></path></svg></a></li></ul></div><ul class="footer-tos"><li><a href="https://www.mozilla.org/about/legal/terms/mozilla">Terms</a></li><li><a href="https://www.mozilla.org/privacy/websites/">Privacy</a></li><li><a href="https://www.mozilla.org/privacy/websites/#cookies">Cookies</a></li></ul><div id="license" class="contentinfo"><p>© 2005-<!-- -->2020<!-- --> Mozilla and individual contributors.</p><p>Content is available under<!-- --> <a href="/docs/MDN/About#Copyrights_and_licenses">these licenses</a>.</p></div></div></footer></div>
<script>window._react_data = JSON.parse("{\"locale\":\"en-US\",\"stringCatalog\":{},\"pluralExpression\":null,\"url\":\"/en-US/docs/Learn/Forms/Advanced_form_styling\",\"documentData\":{\"locale\":\"en-US\",\"slug\":\"Learn/Forms/Advanced_form_styling\",\"enSlug\":\"Learn/Forms/Advanced_form_styling\",\"id\":57447,\"title\":\"Advanced form styling\",\"summary\":\"While there are still difficulties using CSS with HTML forms, there are ways to get around many of the problems. There are no clean, universal solutions, but modern browsers offer new possibilities. For now, the best solution is to learn more about the way the different browsers support CSS when applied to HTML form controls.\",\"language\":\"English (US)\",\"hrefLang\":\"en\",\"absoluteURL\":\"/en-US/docs/Learn/Forms/Advanced_form_styling\",\"wikiURL\":\"https://wiki.developer.mozilla.org/en-US/docs/Learn/Forms/Advanced_form_styling\",\"editURL\":\"https://wiki.developer.mozilla.org/en-US/docs/Learn/Forms/Advanced_form_styling$edit\",\"translateURL\":\"https://wiki.developer.mozilla.org/en-US/docs/Learn/Forms/Advanced_form_styling$locales\",\"translationStatus\":null,\"bodyHTML\":\"<div></div>\\n\\n<div><div class=\\\"prevnext\\\">\\n    <div><a href=\\\"/en-US/docs/Learn/Forms/Styling_web_forms\\\" style=\\\"float: left; width: 20%; text-align: left;\\\"><span style=\\\"\\\"><i class=\\\"icon-arrow-left\\\"></i> Previous </span></a><a href=\\\"/en-US/docs/Learn/Forms\\\" style=\\\"float: left; width: 60%; text-align: center;\\\"><span style=\\\"\\\"><i class=\\\"icon-arrow-up\\\"></i> Overview: Forms</span></a><a href=\\\"/en-US/docs/Learn/Forms/UI_pseudo-classes\\\" style=\\\"width: 20%; float: right; text-align: right;\\\"><span style=\\\"\\\"> Next  <i class=\\\"icon-arrow-right\\\"></i></span></a></div>\\n    <p>\u00A0</p>\\n</div></div>\\n\\n<p><span class=\\\"seoSummary\\\">In this article, we will see what can be done with CSS to style the types of form control that are more difficult to style \u2014 the \\\"bad\\\" and \\\"ugly\\\" categories.</span> As we saw <a class=\\\"new\\\" href=\\\"/en-US/docs/Forms/Styling_web_forms\\\" rel=\\\"nofollow\\\">in the previous article</a>, text fields and buttons are perfectly easy to style; now we will dig into styling the bits that are more problematic.</p>\\n\\n<table class=\\\"learn-box standard-table\\\">\\n\\t<tbody>\\n\\t\\t<tr>\\n\\t\\t\\t<th scope=\\\"row\\\">Prerequisites:</th>\\n\\t\\t\\t<td>Basic computer literacy, and a basic understanding of <a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML\\\">HTML</a> and <a href=\\\"/en-US/docs/Learn/CSS/First_steps\\\">CSS</a>.</td>\\n\\t\\t</tr>\\n\\t\\t<tr>\\n\\t\\t\\t<th scope=\\\"row\\\">Objective:</th>\\n\\t\\t\\t<td>To understand what parts of forms are hard to style, and why; to learn what can be done to customize them.</td>\\n\\t\\t</tr>\\n\\t</tbody>\\n</table>\\n\\n<p>To recap what we said in the previous article, we have:</p>\\n\\n<p><strong>The bad</strong>: Some elements are more difficult to style, requiring more complex CSS or some more specific tricks:</p>\\n\\n<ul>\\n\\t<li>Checkboxes and radio buttons</li>\\n\\t<li><code><a href=\\\"/en-US/docs/Web/HTML/Element/input/search\\\">&lt;input type=\\\"search\\\"&gt;</a></code></li>\\n</ul>\\n\\n<p><strong>The ugly</strong>: Some elements can't be styled thoroughly using CSS. These include:</p>\\n\\n<ul>\\n\\t<li>Elements involved in creating dropdown widgets, including <a href=\\\"/en-US/docs/Web/HTML/Element/select\\\" title=\\\"The HTML &lt;select> element represents a control that provides a menu of options\\\"><code>&lt;select&gt;</code></a>, <a href=\\\"/en-US/docs/Web/HTML/Element/option\\\" title=\\\"The HTML &lt;option> element is used to define an item contained in a &lt;select>, an &lt;optgroup>, or a &lt;datalist>\u00A0element. As such,\u00A0&lt;option>\u00A0can represent menu items in popups and other lists of items in an HTML document.\\\"><code>&lt;option&gt;</code></a>, <a href=\\\"/en-US/docs/Web/HTML/Element/optgroup\\\" title=\\\"The HTML &lt;optgroup> element creates a grouping of options within a &lt;select> element.\\\"><code>&lt;optgroup&gt;</code></a> and <a href=\\\"/en-US/docs/Web/HTML/Element/datalist\\\" title=\\\"The HTML &lt;datalist> element contains a set of &lt;option> elements that represent the permissible or recommended options available to choose from within other controls.\\\"><code>&lt;datalist&gt;</code></a>.</li>\\n\\t<li><code><a href=\\\"/en-US/docs/Web/HTML/Element/input/color\\\">&lt;input type=\\\"color\\\"&gt;</a></code></li>\\n\\t<li>Date-related controls such as <code><a href=\\\"/en-US/docs/Web/HTML/Element/input/datetime-local\\\">&lt;input type=\\\"datetime-local\\\"&gt;</a></code></li>\\n\\t<li><code><a href=\\\"/en-US/docs/Web/HTML/Element/input/range\\\">&lt;input type=\\\"range\\\"&gt;</a></code></li>\\n\\t<li><code><a href=\\\"/en-US/docs/Web/HTML/Element/input/file\\\">&lt;input type=\\\"file\\\"&gt;</a></code></li>\\n\\t<li><a href=\\\"/en-US/docs/Web/HTML/Element/progress\\\" title=\\\"The HTML &lt;progress> element displays an indicator showing the completion progress of a task, typically displayed as a progress bar.\\\"><code>&lt;progress&gt;</code></a> and <a href=\\\"/en-US/docs/Web/HTML/Element/meter\\\" title=\\\"The HTML &lt;meter> element represents either a scalar value within a known range or a fractional value.\\\"><code>&lt;meter&gt;</code></a></li>\\n</ul>\\n\\n<p>Let's first talk about the <code><a href=\\\"/en-US/docs/Web/CSS/appearance\\\">appearance</a></code> property, which is pretty useful for making all of the above more stylable.</p>\\n\\n<h2 id=\\\"appearance_controlling_OS-level_styling\\\">appearance: controlling OS-level styling</h2>\\n\\n<p>In the previous article we said that historically, styling of web form controls was largely taken from the underlying operating system, which is part of the problem with customizing the look of these controls.</p>\\n\\n<p>The <a href=\\\"/en-US/docs/Web/CSS/appearance\\\" title=\\\"The -moz-appearance CSS property is used in Gecko (Firefox) to display an element using platform-native styling based on the operating system's theme.\\\"><code>appearance</code></a> property was created as a way to control what OS- or system-level styling was applied to web form controls. Unfortunately, the behavior of this property's original implementations was very different across browsers, making it not very usable. Newer implementations are more consistent in behavior; interestingly enough, both Chromium-based browsers (Chrome, Opera, Edge), Safari, and Firefox all support the <code>-webkit-</code>\u00A0 prefixed version (<code>-webkit-appearance</code>). Firefox settled on this because web developers mostly seemed to be using the <code>-webkit-</code> prefixed version, so it was better for compatibility.</p>\\n\\n<p>If you look at the reference page you'll see a lot of different possible values listed for <code>-webkit-appearance</code>, however by far the most helpful value, and probably the only one you'll use, is <code>none</code>. This stops any control you apply it to from using system-level styling, as much as possible, and lets you build up the styles yourself using CSS.</p>\\n\\n<p>For example, let's take the following controls:</p>\\n\\n<pre class=\\\"brush: html\\\">&lt;form&gt;\\n  &lt;p&gt;\\n    &lt;label for=\\\"search\\\"&gt;search: &lt;/label&gt;\\n    &lt;input id=\\\"search\\\" name=\\\"search\\\" type=\\\"search\\\"&gt;\\n  &lt;/p&gt;\\n  &lt;p&gt;\\n    &lt;label for=\\\"text\\\"&gt;text: &lt;/label&gt;\\n    &lt;input id=\\\"text\\\" name=\\\"text\\\" type=\\\"text\\\"&gt;\\n  &lt;/p&gt;\\n  &lt;p&gt;\\n    &lt;label for=\\\"date\\\"&gt;date: &lt;/label&gt;\\n    &lt;input id=\\\"date\\\" name=\\\"date\\\" type=\\\"datetime-local\\\"&gt;\\n  &lt;/p&gt;\\n  &lt;p&gt;\\n    &lt;label for=\\\"radio\\\"&gt;radio: &lt;/label&gt;\\n    &lt;input id=\\\"radio\\\" name=\\\"radio\\\" type=\\\"radio\\\"&gt;\\n  &lt;/p&gt;\\n  &lt;p&gt;\\n    &lt;label for=\\\"checkbox\\\"&gt;checkbox: &lt;/label&gt;\\n    &lt;input id=\\\"checkbox\\\" name=\\\"checkbox\\\" type=\\\"checkbox\\\"&gt;\\n  &lt;/p&gt;\\n  &lt;p&gt;&lt;input type=\\\"submit\\\" value=\\\"submit\\\"&gt;&lt;/p&gt;\\n  &lt;p&gt;&lt;input type=\\\"button\\\" value=\\\"button\\\"&gt;&lt;/p&gt;\\n&lt;/form&gt;</pre>\\n\\n<p>Applying the following CSS to them removes system-level styling.</p>\\n\\n<pre class=\\\"brush: css\\\">input {\\n  -webkit-appearance: none; \\n  appearance: none;\\n}</pre>\\n\\n<div class=\\\"blockIndicator note\\\">\\n<p><strong>Note</strong>: It is a good idea to always include both declarations \u2014 prefixed and unprefixed \u2014 when using a prefixed property. Prefixed usually means \\\"work in progress\\\", so in the future browser vendors may come to a consensus to drop the prefix. The above code is good for future-proofing against such an eventuality.</p>\\n</div>\\n\\n<p>The following live example shows you what they look like in your system \u2014 default on the left, and with the above CSS applied on the right (<a class=\\\"external\\\" href=\\\"https://mdn.github.io/learning-area/html/forms/styling-examples/appearence-tester.html\\\" rel=\\\"noopener\\\">find it here also</a> if you want to test it on other systems).</p>\\n\\n<p><iframe class=\\\"live-sample-frame\\\" frameborder=\\\"0\\\" height=\\\"400\\\" src=\\\"https://mdn.github.io/learning-area/html/forms/styling-examples/appearence-tester.html\\\" width=\\\"100%\\\"></iframe></p>\\n\\n<p>In most cases, the effect is to remove the stylized border, which makes CSS styling a bit easier, but isn't really essential. In a couple of cases \u2014 search and radio buttons/checkboxes, it becomes way more useful. We'll look at those now.</p>\\n\\n<h3 id=\\\"Taming_search_boxes\\\">Taming search boxes</h3>\\n\\n<p><code><a href=\\\"/en-US/docs/Web/HTML/Element/input/search\\\">&lt;input type=\\\"search\\\"&gt;</a></code> is basically just a text input, so why is <code>appearance: none;</code> useful here? The answer is that in Chromium-based browsers on macOS, search boxes have some styling restrictions \u2014 you can't adjust their <code>height</code> or <code>font-size</code>\u00A0freely, for example. This is because non-macOS <a class=\\\"external\\\" href=\\\"https://www.wired.com/2013/04/blink/\\\" rel=\\\"noopener\\\">Chrome browsers no longer use the WebKit rendering engine</a>, which enabled\u00A0Aqua appearance by default for certain form controls. With\u00A0Aqua enabled, some form controls are not <a class=\\\"external\\\" href=\\\"https://webkit.org/blog/28/buttons/\\\" rel=\\\"noopener\\\">scalable</a>.\u00A0</p>\\n\\n<p>This can be fixed using our friend <code>appearance: none;</code>, which disables the default Aqua appearance:</p>\\n\\n<pre class=\\\"brush: css\\\">input[type=\\\"search\\\"] {\\n    -webkit-appearance: none;\\n    appearance: none;\\n}</pre>\\n\\n<p>In the example below, you can see two identical styled search boxes. The right one has <code>appearance: none;</code> applied, and the left one doesn't. If you look at it in macOS Chrome you'll see that the left one isn't sized properly.</p>\\n\\n<p><iframe class=\\\"live-sample-frame\\\" frameborder=\\\"0\\\" height=\\\"200\\\" src=\\\"https://mdn.github.io/learning-area/html/forms/styling-examples/search-appearence.html\\\" width=\\\"100%\\\"></iframe></p>\\n\\n<p>Interestingly, setting border/background on the search field also fixes this problem, as it <a class=\\\"external\\\" href=\\\"https://webkit.org/blog/28/buttons/\\\" rel=\\\"noopener\\\">disables</a> or \\\"breaks\\\" the Aqua appearance too.\u00A0The following styled search doesn't have <code>appearance: none;</code> applied, but it doesn't suffer from the same problem in macOS Chrome as the previous example.</p>\\n\\n<p><iframe class=\\\"live-sample-frame\\\" frameborder=\\\"0\\\" height=\\\"200\\\" src=\\\"https://mdn.github.io/learning-area/html/forms/styling-examples/styled-search.html\\\" width=\\\"100%\\\"></iframe></p>\\n\\n<div class=\\\"blockIndicator note\\\">\\n<p><strong>Note</strong>: You may have noticed that in the search field, the \\\"x\\\" delete icon disappears when the input loses focus in Edge and Chrome, but stays put in Safari. To remove via CSS, you can use\u00A0<code>input[type=\\\"search\\\"]::-webkit-search-cancel-button { display: none; }</code>. However, this seems to get rid of the icon <em>with</em> focus too, with no apparent\u00A0way to get it back.</p>\\n</div>\\n\\n<h3 id=\\\"Styling_checkboxes_and_radio_buttons\\\">Styling checkboxes and radio buttons</h3>\\n\\n<p>Styling a checkbox or a radio button is tricky by default. The sizes of check boxes and radio buttons are not meant to be changed with their default designs, and browsers react very differently when you try.</p>\\n\\n<p>For example, consider this simple test case:</p>\\n\\n<pre class=\\\"brush: html\\\">&lt;span&gt;&lt;input type=\\\"checkbox\\\"&gt;&lt;/span&gt;</pre>\\n\\n<pre class=\\\"brush: css\\\">span {\\n    display: inline-block;\\n    background: red;\\n}\\n\\ninput[type=\\\"checkbox\\\"] {\\n    width: 100px;\\n    height: 100px;\\n}</pre>\\n\\n<p>Different browsers handle this in many different, often ugly ways:</p>\\n\\n<table>\\n\\t<thead>\\n\\t\\t<tr>\\n\\t\\t\\t<th scope=\\\"col\\\">Browser</th>\\n\\t\\t\\t<th scope=\\\"col\\\">Rendering</th>\\n\\t\\t</tr>\\n\\t</thead>\\n\\t<tbody>\\n\\t\\t<tr>\\n\\t\\t\\t<td>Firefox 71 (macOS)</td>\\n\\t\\t\\t<td><img alt=\\\"\\\" src=\\\"https://mdn.mozillademos.org/files/15671/firefox-mac-checkbox.png\\\" style=\\\"height: 118px; width: 120px;\\\"></td>\\n\\t\\t</tr>\\n\\t\\t<tr>\\n\\t\\t\\t<td>Firefox 57 (Windows 10)</td>\\n\\t\\t\\t<td><img alt=\\\"\\\" src=\\\"https://mdn.mozillademos.org/files/15691/firefox-windows-checkbox.png\\\" style=\\\"height: 115px; width: 113px;\\\"></td>\\n\\t\\t</tr>\\n\\t\\t<tr>\\n\\t\\t\\t<td>Chrome 77 (macOS), Safari 13, Opera</td>\\n\\t\\t\\t<td><img alt=\\\"\\\" src=\\\"https://mdn.mozillademos.org/files/15676/chrome-mac-checkbox.png\\\" style=\\\"height: 117px; width: 116px;\\\"></td>\\n\\t\\t</tr>\\n\\t\\t<tr>\\n\\t\\t\\t<td>Chrome 63 (Windows 10)</td>\\n\\t\\t\\t<td><img alt=\\\"\\\" src=\\\"https://mdn.mozillademos.org/files/15681/chrome-windows-checkbox.png\\\" style=\\\"height: 117px; width: 120px;\\\"></td>\\n\\t\\t</tr>\\n\\t\\t<tr>\\n\\t\\t\\t<td>Internet Explorer 11 (Windows 10)</td>\\n\\t\\t\\t<td><img alt=\\\"\\\" src=\\\"https://mdn.mozillademos.org/files/15696/ie11-checkbox.png\\\" style=\\\"height: 112px; width: 119px;\\\"></td>\\n\\t\\t</tr>\\n\\t\\t<tr>\\n\\t\\t\\t<td>Edge 16 (Windows 10)</td>\\n\\t\\t\\t<td><img alt=\\\"\\\" src=\\\"https://mdn.mozillademos.org/files/15686/edge-checkbox.png\\\" style=\\\"height: 118px; width: 119px;\\\"></td>\\n\\t\\t</tr>\\n\\t</tbody>\\n</table>\\n\\n<h4 id=\\\"Using_appearence_none_on_radioscheckboxes\\\">Using appearence: none on radios/checkboxes</h4>\\n\\n<p>As we showed before, you can remove the default appearance of a checkbox or radio button altogether with <a href=\\\"/en-US/docs/Web/CSS/appearance\\\" title=\\\"The -moz-appearance CSS property is used in Gecko (Firefox) to display an element using platform-native styling based on the operating system's theme.\\\"><code>appearance</code></a><code>:none;</code> Let's take this example HTML:</p>\\n\\n<pre class=\\\"brush: html\\\">&lt;form&gt;\\n  &lt;fieldset&gt;\\n    &lt;legend&gt;Fruit preferences&lt;/legend&gt;\\n\\n    &lt;p&gt;\\n      &lt;label&gt;\\n        &lt;input type=\\\"checkbox\\\" name=\\\"fruit-1\\\" value=\\\"cherry\\\"&gt;\\n        I like cherry\\n      &lt;/label&gt;\\n    &lt;/p&gt;\\n    &lt;p&gt;\\n      &lt;label&gt;\\n        &lt;input type=\\\"checkbox\\\" name=\\\"fruit-2\\\" value=\\\"banana\\\" disabled&gt;\\n        I can't like banana\\n      &lt;/label&gt;\\n    &lt;/p&gt;\\n    &lt;p&gt;\\n      &lt;label&gt;\\n        &lt;input type=\\\"checkbox\\\" name=\\\"fruit-3\\\" value=\\\"strawberry\\\"&gt;\\n        I like strawberry\\n      &lt;/label&gt;\\n    &lt;/p&gt;\\n  &lt;/fieldset&gt;\\n&lt;/form&gt;</pre>\\n\\n<p>Now, let's style these with a custom checkbox design. Let's start by unstyling the original check boxes:</p>\\n\\n<pre class=\\\"brush: css\\\">input[type=\\\"checkbox\\\"] {\\n  -webkit-appearance: none;\\n  appearance: none;\\n}\\n</pre>\\n\\n<p>We can use the <a href=\\\"/en-US/docs/Web/CSS/:checked\\\" title='The :checked CSS pseudo-class selector represents any radio (&lt;input type=\\\"radio\\\">), checkbox (&lt;input type=\\\"checkbox\\\">), or option (&lt;option> in a &lt;select>) element that is checked or toggled to an on state.'><code>:checked</code></a> and <a href=\\\"/en-US/docs/Web/CSS/:disabled\\\" title=\\\"The :disabled CSS pseudo-class represents any disabled element. An element is disabled if it can't be activated (selected, clicked on, typed into, etc.) or accept focus. The element also has an enabled state, in which it can be activated or accept focus.\\\"><code>:disabled</code></a> pseudo-classes to change the appearance of our custom checkbox as its state changes:</p>\\n\\n<pre class=\\\"brush: css\\\">input[type=\\\"checkbox\\\"] {\\n  position: relative;\\n  width: 1em;\\n  height: 1em;\\n  border: 1px solid gray;\\n  /* Adjusts the position of the checkboxes on the text baseline */ \\n  vertical-align: -2px;\\n  /* Set here so that Windows' High-Contrast Mode can override */\\n  color: green;\\n}\\n\\ninput[type=\\\"checkbox\\\"]::before {\\n  content: \\\"\u2714\\\";\\n  position: absolute;\\n  font-size: 1.2em;\\n  right: -1px;\\n  top: -0.3em;\\n  visibility: hidden;\\n}\\n\\ninput[type=\\\"checkbox\\\"]:checked::before {\\n  /* Use `visibility` instead of `display` to avoid recalculating layout */\\n  visibility: visible;\\n}\\n\\ninput[type=\\\"checkbox\\\"]:disabled {\\n  border-color: black;\\n  background: #ddd;\\n  color: gray;\\n}</pre>\\n\\n<p>You'll find more out about such pseudo-classes and more in the <a href=\\\"/en-US/docs/Learn/Forms/UI_pseudo-classes\\\">next article</a>; the above ones do the following:</p>\\n\\n<ul>\\n\\t<li><code>:checked</code> \u2014 the checkbox (or radio button) is in a checked state \u2014 the user has clicked/activated it.</li>\\n\\t<li><code>:disabled</code> \u2014 the checkbox (or radio button) is in a disabled state \u2014 it cannot be interacted with.</li>\\n</ul>\\n\\n<p id=\\\"results\\\">You can see the live result:</p>\\n\\n<p><iframe class=\\\"live-sample-frame\\\" frameborder=\\\"0\\\" height=\\\"200\\\" src=\\\"https://mdn.github.io/learning-area/html/forms/styling-examples/checkboxes-styled.html\\\" width=\\\"100%\\\"></iframe></p>\\n\\n<p>We've also created a couple of other examples to give you more ideas:</p>\\n\\n<ul>\\n\\t<li><a class=\\\"external\\\" href=\\\"https://mdn.github.io/learning-area/html/forms/styling-examples/radios-styled.html\\\" rel=\\\"noopener\\\">Styled radio buttons</a>: Custom radio button styling.</li>\\n\\t<li><a class=\\\"external\\\" href=\\\"https://mdn.github.io/learning-area/html/forms/toggle-switch-example/\\\" rel=\\\"noopener\\\">Toggle switch example</a>: A checkbox styled to look like a toggle switch.</li>\\n</ul>\\n\\n<p>If you view these checkboxes in a browser that doesn't support <a href=\\\"/en-US/docs/Web/CSS/appearance\\\" title=\\\"The -moz-appearance CSS property is used in Gecko (Firefox) to display an element using platform-native styling based on the operating system's theme.\\\"><code>appearance</code></a>, your custom design will be lost, but they will still look like checkboxes and be usable.</p>\\n\\n<div class=\\\"blockIndicator note\\\">\\n<p><strong>Note</strong>: While Internet Explorer doesn't support any version of <code>appearance</code>, the <code>input[type=checkbox]::-ms-check</code> enables the targeting of checkboxes in IE only. This technique works for radio buttons too, despite the name <code>-ms-<em><strong>check</strong></em></code>.</p>\\n</div>\\n\\n<h2 id=\\\"What_can_be_done_about_the_ugly_elements\\\">What can be done about the \\\"ugly\\\" elements?</h2>\\n\\n<p>Now let's turn our attention to the \\\"ugly\\\" controls \u2014 the ones that are really hard to thoroughly\u00A0 style. In short, these are drop-down boxes, complex control types like <code><a href=\\\"/en-US/docs/Web/HTML/Element/input/color\\\">color</a></code> and <code><a href=\\\"/en-US/docs/Web/HTML/Element/input/datetime-local\\\">datetime-local</a></code>, and feedback\u2014oriented controls like <a href=\\\"/en-US/docs/Web/HTML/Element/progress\\\" title=\\\"The HTML &lt;progress> element displays an indicator showing the completion progress of a task, typically displayed as a progress bar.\\\"><code>&lt;progress&gt;</code></a> and <a href=\\\"/en-US/docs/Web/HTML/Element/meter\\\" title=\\\"The HTML &lt;meter> element represents either a scalar value within a known range or a fractional value.\\\"><code>&lt;meter&gt;</code></a>.</p>\\n\\n<p>The problem is that these elements have very different default looks across browsers, and while you can style them in some ways, some parts of their internals are literally impossible to style.</p>\\n\\n<p>If you are prepared to live with some differences in look and feel, you can get away with some simple styling to make sizing consistent, uniform styling of things like background-colors, and usage of appearence to get rid of some system-level styling.</p>\\n\\n<p>Take the following example, which shows a number of the \\\"ugly\\\" form features in action:</p>\\n\\n<p><iframe class=\\\"live-sample-frame\\\" frameborder=\\\"0\\\" height=\\\"750\\\" src=\\\"https://mdn.github.io/learning-area/html/forms/styling-examples/ugly-controls.html\\\" width=\\\"100%\\\"></iframe></p>\\n\\n<p>This example has the following CSS applied to it:</p>\\n\\n<pre class=\\\"brush: css\\\">body {\\n  font-family: 'Josefin Sans', sans-serif;\\n  margin: 20px auto;\\n  max-width: 400px;\\n}\\n\\nform &gt; div {\\n  margin-bottom: 20px;\\n}\\n\\nselect {\\n  -webkit-appearance: none;\\n  appearance: none;\\n}\\n\\n.select-wrapper {\\n  position: relative;\\n}\\n\\n.select-wrapper::after {\\n  content: \\\"\u25BC\\\";\\n  font-size: 1rem;\\n  top: 6px;\\n  right: 10px;\\n  position: absolute;\\n}\\n\\nbutton, label, input, select, progress, meter {\\n  display: block;\\n  font-family: inherit;\\n  font-size: 100%;\\n  padding: 0;\\n  margin: 0;\\n  box-sizing: border-box;\\n  width: 100%;\\n  padding: 5px;\\n  height: 30px;\\n}\\n\\ninput[type=\\\"text\\\"], input[type=\\\"datetime-local\\\"], input[type=\\\"color\\\"], select {\\n  box-shadow: inset 1px 1px 3px #ccc;\\n  border-radius: 5px;\\n}\\n\\nlabel {\\n  margin-bottom: 5px;\\n}\\n\\nbutton {\\n  width: 60%;\\n  margin: 0 auto;\\n}</pre>\\n\\n<div class=\\\"blockIndicator note\\\">\\n<p><strong>Note</strong>: If you want to test these examples across a number of browsers simultaneously, you can <a class=\\\"external\\\" href=\\\"https://mdn.github.io/learning-area/html/forms/styling-examples/ugly-controls.html\\\" rel=\\\"noopener\\\">find it live here</a> (also <a class=\\\"external\\\" href=\\\"https://github.com/mdn/learning-area/blob/master/html/forms/styling-examples/ugly-controls.html\\\" rel=\\\"noopener\\\">see here for the source code</a>).</p>\\n\\n<p>Also bear in mind that we've added some JavaScript to the page that lists the files selected by the file picker, below the control itself. This is a simplified version of the example found on the <code><a href=\\\"/en-US/docs/Web/HTML/Element/input/file#Examples\\\">&lt;input type=\\\"file\\\"&gt;</a></code> reference page.</p>\\n</div>\\n\\n<p>As you can see, we've done fairly well at getting these to look uniform across modern browsers.</p>\\n\\n<p>We've applied some global normalizing CSS to all the controls and their labels, to get them to size in the same way, adopt their parent font, etc., as mentioned in the previous article:</p>\\n\\n<pre class=\\\"brush: css\\\">button, label, input, select, progress, meter {\\n  display: block;\\n  font-family: inherit;\\n  font-size: 100%;\\n  padding: 0;\\n  margin: 0;\\n  box-sizing: border-box;\\n  width: 100%;\\n  padding: 5px;\\n  height: 30px;\\n}</pre>\\n\\n<p>We also added some uniform shadow and rounded corners to the controls on which it made sense:</p>\\n\\n<pre class=\\\"brush: css\\\">input[type=\\\"text\\\"], input[type=\\\"datetime-local\\\"], input[type=\\\"color\\\"], select {\\n  box-shadow: inset 1px 1px 3px #ccc;\\n  border-radius: 5px;\\n}</pre>\\n\\n<p>on other controls like range types, progress bars, and meters they just add an ugly box around the control area, so it doesn't make sense.</p>\\n\\n<p>Let's talk about some specifics of each of these types of control, highlighting difficulties along the way.</p>\\n\\n<h3 id=\\\"Selects_and_datalists\\\">Selects and datalists</h3>\\n\\n<p>In modern browsers, selects and datalists are generally not too bad to style provided you don't want to vary the look and feel too much from the defaults.</p>\\n\\n<p>We've managed to get the basic look of the boxes looking pretty uniform and consisent. The datalist control is <code>&lt;input type=\\\"text\\\"&gt;</code> anyway, so we knew this wouldn't be a problem.</p>\\n\\n<p>Two things are slightly more problematic. First of all, the select's \\\"arrow\\\" icon that indicates it is a dropdown differs across browsers. It also tends to change if you increase the size of the select box, or resize in an ugly fashion. To fix this in our example we first used our old friend <code>appearance: none</code> to get rid of the icon altogether:</p>\\n\\n<pre class=\\\"brush: css\\\">select {\\n  -webkit-appearance: none;\\n  appearance: none;\\n}</pre>\\n\\n<p>We then created our own icon using generated content. We put an extra wrapper around the control, because <code><a href=\\\"/en-US/docs/Web/CSS/::before\\\">::before</a></code>/<code><a href=\\\"/en-US/docs/Web/CSS/::after\\\">::after</a></code> don't work on <code>&lt;select&gt;</code> elements (this is because generated content is placed relative to an element's formatting box, but form inputs work more like replaced elements \u2014 their display is generated by the browser and put in place \u2014 and therefore don't have one):</p>\\n\\n<pre class=\\\"brush: html\\\">&lt;div class=\\\"select-wrapper\\\"&gt;&lt;select id=\\\"select\\\" name=\\\"select\\\"&gt;\\n  &lt;option&gt;Banana&lt;/option&gt;\\n  &lt;option&gt;Cherry&lt;/option&gt;\\n  &lt;option&gt;Lemon&lt;/option&gt;\\n&lt;/select&gt;&lt;/div&gt;</pre>\\n\\n<p>We then use generated content to generate a little down arrow, and put it in the right place using positioning:</p>\\n\\n<pre class=\\\"brush: css\\\">.select-wrapper {\\n  position: relative;\\n}\\n\\n.select-wrapper::after {\\n  content: \\\"\u25BC\\\";\\n  font-size: 1rem;\\n  top: 6px;\\n  right: 10px;\\n  position: absolute;\\n}</pre>\\n\\n<p>The second, slightly more major issue is that you don't have control over the box that appears containing the options when you click on the <code>&lt;select&gt;</code> box to open it. You'll notice that the options don't inherit the font set on the parent. You also can't consistently set things like spacing and colors. For example, Firefox will apply <code><a href=\\\"/en-US/docs/Web/CSS/color\\\">color</a></code> and <code><a href=\\\"/en-US/docs/Web/CSS/background-color\\\">background-color</a></code> when set on the <code><a href=\\\"/en-US/docs/Web/HTML/Element/option\\\">&lt;option&gt;</a></code> elements, Chrome won't. Neither of them will apply any kind of spacing (e.g. <code><a href=\\\"/en-US/docs/Web/CSS/padding\\\">padding</a></code>). The same is also true of the autocomplete list that appears for the datalist.</p>\\n\\n<p>If you really need full control over the option styling, you'll have to either use some kind of library to generate a custom control, or build your own custom control, or in the case of select use the <code>multiple</code> attribute, which makes all the options appear on the page, sidestepping this particular problem:</p>\\n\\n<pre class=\\\"brush: html\\\">&lt;select id=\\\"select\\\" name=\\\"select\\\" multiple&gt;\\n  ...\\n&lt;/select&gt;</pre>\\n\\n<p>Of course, this might also not fit in with the design you are going for, but it's worth noting!</p>\\n\\n<h3 id=\\\"Date_input_types\\\">Date input types</h3>\\n\\n<p>The date/time input types (<code><a href=\\\"/en-US/docs/Web/HTML/Element/input/datetime-local\\\">datetime-local</a></code>, <code><a href=\\\"/en-US/docs/Web/HTML/Element/input/time\\\">time</a></code>, <code><a href=\\\"/en-US/docs/Web/HTML/Element/input/week\\\">week</a></code>, <code><a href=\\\"/en-US/docs/Web/HTML/Element/input/month\\\">month</a></code>) all have the same major associated issue. The actual containing box is as easy to style as any text input, and what we've got in this demo looks fine.</p>\\n\\n<p>However, the internal parts of the control (e.g. the popup calendar that you use pick a date, the spinner that you can use to increment/decrement values) are not stylable at all, and you can't get rid of them using <code>appearence: none;</code>. If you really need full control over the styling, you'll have to either use some kind of library to generate a custom control, or build your own.</p>\\n\\n<div class=\\\"blockIndicator note\\\">\\n<p><strong>Note</strong>: It is worth mentioning <code><a href=\\\"/en-US/docs/Web/HTML/Element/input/number\\\">&lt;input type=\\\"number\\\"&gt;</a></code> here too \u2014 this also has a spinner that you can use to increment/decrement values, so potentially suffers from the same problem. However, in the case of the <code>number</code> type the data being collected is simpler, and it is easy to just use a <code>text</code> input type instead if desired (or <code>tel</code> if you want mobile browsers to show the numeric keypad).</p>\\n</div>\\n\\n<h3 id=\\\"Range_input_types\\\">Range input types</h3>\\n\\n<p><code><a href=\\\"/en-US/docs/Web/HTML/Element/input/range\\\">&lt;input type=\\\"range\\\"&gt;</a></code> is annoying to style. You can use something like the following to remove the default slider track completely and replace it with a custom style (a thin red track, in this case):</p>\\n\\n<pre class=\\\"brush: css\\\">input[type=\\\"range\\\"] {\\n  appearance: none;\\n  -webkit-appearance: none;\\n  background: red;\\n  height: 2px;\\n  padding: 0;\\n  outline: 1px solid transparent;\\n}</pre>\\n\\n<p>However, it is very difficult to customize the style of the range control's drag handle \u2014 to get full control over range styling you'll need to use a whole bunch of complex CSS code, including multiple non-standard, browser-specific pseudo-elements. Check out <a class=\\\"external\\\" href=\\\"https://css-tricks.com/styling-cross-browser-compatible-range-inputs-css/\\\" rel=\\\"noopener\\\">Styling Cross-Browser Compatible Range Inputs with CSS</a> on CSS tricks for a detailed write up of what's needed.</p>\\n\\n<h3 id=\\\"Color_input_types\\\">Color input types</h3>\\n\\n<p>Input controls of type color are not too bad. In supporting browsers, they tend to just give you a block of solid color with a small border.</p>\\n\\n<p>You can remove the border, just leaving the block of color, using something like this:</p>\\n\\n<pre class=\\\"brush: css\\\">input[type=\\\"color\\\"] {\\n  border: 0;\\n  padding: 0;\\n}</pre>\\n\\n<p>However, a custom solution is the only way to get anything significantly different.</p>\\n\\n<h3 id=\\\"File_input_types\\\">File input types</h3>\\n\\n<p>Inputs of type file are generally OK \u2014 as you saw in our example, it is fairly easy to create something that fits in OK with the rest of the page \u2014 the output line that is part of the control will inherit the parent font if you tell the input to do so, and you can style the custom list of file names and sizes in any way you want; we created it after all.</p>\\n\\n<p>The only problem with file pickers is that the button provided that you press to open the file picker is completely unstyleable \u2014 it can't be sized or colored, and it won't even accept a different font.</p>\\n\\n<p>One way around this is to take advantage of the fact that if you have a label associated with a form control, clicking the label will activate the control. So you could hide the actual from input using something like this:</p>\\n\\n<pre class=\\\"brush: css\\\">input[type=\\\"file\\\"] {\\n  height: 0;\\n  padding: 0;\\n  opacity: 0;\\n}</pre>\\n\\n<p>And then style the label to act like a button, which when pressed will open the file picker as expected:</p>\\n\\n<pre class=\\\"brush: css\\\">label[for=\\\"file\\\"] {\\n  box-shadow: 1px 1px 3px #ccc;\\n  background: linear-gradient(to bottom, #eee, #ccc);\\n  border: 1px solid rgb(169, 169, 169);\\n  border-radius: 5px;\\n  text-align: center;\\n  line-height: 1.5;\\n}\\n\\nlabel[for=\\\"file\\\"]:hover {\\n  background: linear-gradient(to bottom, #fff, #ddd);\\n}\\n\\nlabel[for=\\\"file\\\"]:active {\\n  box-shadow: inset 1px 1px 3px #ccc;\\n}</pre>\\n\\n<p>You can see the result of the above CSS styling in the below live example (see also <a class=\\\"external\\\" href=\\\"https://mdn.github.io/learning-area/html/forms/styling-examples/styled-file-picker.html\\\" rel=\\\"noopener\\\">styled-file-picker.html</a> live, and the <a class=\\\"new\\\" href=\\\"/enhttps://github.com/mdn/learning-area/blob/master/html/forms/styling-examples/styled-file-picker.html-US/docs/\\\" rel=\\\"nofollow\\\">source code</a>).</p>\\n\\n<p><iframe class=\\\"live-sample-frame\\\" frameborder=\\\"0\\\" height=\\\"200\\\" src=\\\"https://mdn.github.io/learning-area/html/forms/styling-examples/styled-file-picker.html\\\" width=\\\"100%\\\"></iframe></p>\\n\\n<h3 id=\\\"Meters_and_progress_bars\\\">Meters and progress bars</h3>\\n\\n<p><code><a href=\\\"/en-US/docs/Web/HTML/Element/meter\\\">&lt;meter&gt;</a></code> and <code><a href=\\\"/en-US/docs/Web/HTML/Element/progress\\\">&lt;progress&gt;</a></code> are possibly the worst of the lot. As you saw in the earlier example, we can set them to a desired width relatively accurately. But beyond that, they are really difficult to style in any way. They don't handle height settings consistently between each other and between browsers, you can color the background, but not the foreground bar, and setting <code>appearance: none</code> on them makes things worse, not better.</p>\\n\\n<p>It is easier to just create your own custom solution for these features, if you want to be able to control the styling, or use a third party colution such as <a class=\\\"external\\\" href=\\\"http://kimmobrunfeldt.github.io/progressbar.js/#examples\\\" rel=\\\"noopener\\\">progressbar.js</a>.</p>\\n\\n<h2 id=\\\"The_road_to_nicer_forms_useful_libraries_and_polyfills\\\">The road to nicer forms: useful libraries and polyfills</h2>\\n\\n<p>As we've mentioned above a few times, if you want to gain full control over the \\\"ugly\\\" control types, you have no choice but to rely on JavaScript. In the article <a href=\\\"/en-US/docs/Learn/Forms/How_to_build_custom_form_controls\\\">How to build custom form controls</a> you will see how to do it on your own, but there are some very useful libraries out there that can help you:</p>\\n\\n<ul>\\n\\t<li><a class=\\\"external\\\" href=\\\"http://sprawsm.com/uni-form/\\\" rel=\\\"external noopener\\\">Uni-form</a> is a framework that standardizes form markup, styling it with CSS. It also offers a few additional features when used with jQuery, but that's optional.</li>\\n\\t<li><a class=\\\"external\\\" href=\\\"http://formalize.me/\\\" rel=\\\"external noopener\\\">Formalize</a> is an extension to common JavaScript frameworks (such as jQuery, Dojo, YUI, etc.) that helps to normalize and customize your forms.</li>\\n\\t<li><a class=\\\"external\\\" href=\\\"http://www.emblematiq.com/lab/niceforms/\\\" rel=\\\"external noopener\\\">Niceforms</a> is a standalone JavaScript method that provides complete customization of web forms. You can use some of the built in themes, or create your own.</li>\\n</ul>\\n\\n<p>The following libraries aren't just about forms, but they have very interesting features for dealing with HTML forms:</p>\\n\\n<ul>\\n\\t<li><a class=\\\"external\\\" href=\\\"http://jqueryui.com/\\\" rel=\\\"external noopener\\\">jQuery UI</a> offers customizable widgets such as date pickers (with special attention given to accessibility).</li>\\n\\t<li><a class=\\\"external\\\" href=\\\"http://twitter.github.com/bootstrap/base-css.html#forms\\\" rel=\\\"external noopener\\\">Twitter Bootstrap</a> can help normalize your forms.</li>\\n\\t<li><a class=\\\"external\\\" href=\\\"https://afarkas.github.io/webshim/demos/\\\" rel=\\\"external noopener\\\">WebShim</a> is a huge tool that can help you deal with browser HTML5 support. The web forms part can be really helpful.</li>\\n</ul>\\n\\n<p>Remember that CSS and JavaScript can have side effects. So if you choose to use one of those libraries, you should always have robust fallback HTML in case the script fails. There are many reasons why scripts may fail, especially in the mobile world, and you need to design your Web site or app to handle these cases as best as possible.</p>\\n\\n<h2 id=\\\"Summary\\\">Summary</h2>\\n\\n<p>While there are still difficulties using CSS with HTML forms, there are ways to get around many of the problems. There are no clean, universal solutions, but modern browsers offer new possibilities. For now, the best solution is to learn more about the way the different browsers support CSS when applied to HTML form controls.</p>\\n\\n<p>In the next article of this module, we will explore the different <a href=\\\"/en-US/docs/Learn/Forms/UI_pseudo-classes\\\">UI pseudo-classes</a> available to us in modern browsers for styling forms in different states.</p>\\n\\n<div class=\\\"prevnext\\\">\\n    <div><a href=\\\"/en-US/docs/Learn/Forms/Styling_web_forms\\\" style=\\\"float: left; width: 20%; text-align: left;\\\"><span style=\\\"\\\"><i class=\\\"icon-arrow-left\\\"></i> Previous </span></a><a href=\\\"/en-US/docs/Learn/Forms\\\" style=\\\"float: left; width: 60%; text-align: center;\\\"><span style=\\\"\\\"><i class=\\\"icon-arrow-up\\\"></i> Overview: Forms</span></a><a href=\\\"/en-US/docs/Learn/Forms/UI_pseudo-classes\\\" style=\\\"width: 20%; float: right; text-align: right;\\\"><span style=\\\"\\\"> Next  <i class=\\\"icon-arrow-right\\\"></i></span></a></div>\\n    <p>\u00A0</p>\\n</div>\\n\\n<h2 id=\\\"In_this_module\\\">In this module</h2>\\n\\n<ul>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/Your_first_form\\\">Your first form</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/How_to_structure_a_web_form\\\">How to structure a web form</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/Basic_native_form_controls\\\">Basic native form controls</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/HTML5_input_types\\\">The HTML5 input types</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/Other_form_controls\\\">Other form controls</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/Styling_web_forms\\\">Styling web forms</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/Advanced_form_styling\\\">Advanced form styling</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/UI_pseudo-classes\\\">UI pseudo-classes</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/Form_validation\\\">Client-side form validation</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/Sending_and_retrieving_form_data\\\">Sending form data</a></li>\\n</ul>\\n\\n<h3 id=\\\"Advanced_Topics\\\">Advanced Topics</h3>\\n\\n<ul>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/How_to_build_custom_form_controls\\\">How to build custom form controls</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/Sending_forms_through_JavaScript\\\">Sending forms through JavaScript</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_widgets\\\">Property compatibility table for form widgets</a></li>\\n</ul>\",\"quickLinksHTML\":\"\\n\\n<ol>\\n  <li data-default-state=\\\"closed\\\"><a href=\\\"/en-US/docs/Learn/Getting_started_with_the_web\\\"><strong>Complete beginners start here!</strong></a></li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>Getting started with the Web</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/Getting_started_with_the_web\\\">Getting started with the Web overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/Getting_started_with_the_web/Installing_basic_software\\\">Installing basic software</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like\\\">What will your website look like?</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/Getting_started_with_the_web/Dealing_with_files\\\">Dealing with files</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics\\\">HTML basics</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics\\\">CSS basics</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/Getting_started_with_the_web/JavaScript_basics\\\">JavaScript basics</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/Getting_started_with_the_web/Publishing_your_website\\\">Publishing your website</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/Getting_started_with_the_web/How_the_Web_works\\\">How the Web works</a></li>\\n          </ol>\\n      </details>\\n  </li>\\n  <li data-default-state=\\\"closed\\\"><a href=\\\"/en-US/docs/Learn/HTML\\\"><strong>HTML \u2014 Structuring the Web</strong></a></li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>Introduction to HTML</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML\\\">Introduction to HTML overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Getting_started\\\">Getting started with HTML</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML\\\">What's in the head? Metadata in HTML</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals\\\">HTML text fundamentals</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks\\\">Creating hyperlinks</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting\\\">Advanced text formatting</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure\\\">Document and website structure</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML\\\">Debugging HTML</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter\\\">Assessment: Marking up a letter</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content\\\">Assessment: Structuring a page of content</a></li>\\n          </ol>\\n      </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>Multimedia and embedding</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Multimedia_and_embedding\\\">Multimedia and embedding overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML\\\">Images in HTML</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content\\\">Video and audio content</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies\\\">From object to iframe \u2014 other embedding technologies</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web\\\">Adding vector graphics to the Web</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images\\\">Responsive images</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page\\\">Assessment: Mozilla splash page</a></li>\\n          </ol>\\n      </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>HTML tables</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Tables\\\">HTML tables overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Tables/Basics\\\">HTML table basics</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Tables/Advanced\\\">HTML Table advanced features and accessibility</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/HTML/Tables/Structuring_planet_data\\\">Assessment: Structuring planet data</a></li>\\n          </ol>\\n      </details>\\n  </li>\\n  <li data-default-state=\\\"closed\\\"><a href=\\\"/en-US/docs/Learn/CSS\\\"><strong>CSS \u2014 Styling the Web</strong></a></li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>CSS first steps</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/First_steps\\\">CSS first steps overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/First_steps/What_is_CSS\\\">What is CSS?</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/First_steps/Getting_started\\\">Getting started with CSS</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/First_steps/How_CSS_is_structured\\\">How CSS is structured</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/First_steps/How_CSS_works\\\">How CSS works</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/First_steps/Using_your_new_knowledge\\\">Using your new knowledge</a></li>\\n          </ol>\\n      </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>CSS building blocks</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks\\\">CSS building blocks overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Cascade_and_inheritance\\\">Cascade and inheritance</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Selectors\\\">CSS selectors</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/The_box_model\\\">The box model</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Backgrounds_and_borders\\\">Backgrounds and borders</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Handling_different_text_directions\\\">Handling different text directions</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Overflowing_content\\\">Overflowing content</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Values_and_units\\\">Values and units</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Sizing_items_in_CSS\\\">Sizing items in CSS</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Images_media_form_elements\\\">Images, media, and form elements</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Styling_tables\\\">Styling tables</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Debugging_CSS\\\">Debugging CSS</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Building_blocks/Organizing\\\">Organizing your CSS</a></li>\\n      </ol></details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>Styling text</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Styling_text\\\">Styling text overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Styling_text/Fundamentals\\\">Fundamental text and font styling</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Styling_text/Styling_lists\\\">Styling lists</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Styling_text/Styling_links\\\">Styling links</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Styling_text/Web_fonts\\\">Web fonts</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/Styling_text/Typesetting_a_homepage\\\">Assessment: Typesetting a community school homepage</a></li>\\n          </ol>\\n      </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>CSS layout</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout\\\">CSS layout overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Introduction\\\">Introduction</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Normal_Flow\\\">Normal Flow</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Flexbox\\\">Flexbox</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Grids\\\">Grids</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Floats\\\">Floats</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Positioning\\\">Positioning</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Multiple-column_Layout\\\">Multiple-column Layout</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Responsive_Design\\\">Responsive design</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Media_queries\\\">Beginner's guide to media queries</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods\\\">Legacy Layout Methods</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers\\\">Supporting Older Browsers</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension\\\">Fundamental Layout Comprehension</a></li>\\n          </ol>\\n      </details>\\n  </li>\\n  <li data-default-state=\\\"closed\\\"><a href=\\\"/en-US/docs/Learn/JavaScript\\\"><strong>JavaScript \u2014 Dynamic client-side scripting</strong></a></li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>JavaScript first steps</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/First_steps\\\">JavaScript first steps overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/First_steps/What_is_JavaScript\\\">What is JavaScript?</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/First_steps/A_first_splash\\\">A first splash into JavaScript</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong\\\">What went wrong? Troubleshooting JavaScript</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/First_steps/Variables\\\">Storing the information you need \u2014 Variables</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/First_steps/Math\\\">Basic math in JavaScript \u2014 Numbers and operators</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/First_steps/Strings\\\">Handling text \u2014 Strings in JavaScript</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/First_steps/Useful_string_methods\\\">Useful string methods</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/First_steps/Arrays\\\">Arrays</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/First_steps/Silly_story_generator\\\">Assessment: Silly story generator</a></li>\\n          </ol>\\n      </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>JavaScript building blocks</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Building_blocks\\\">JavaScript building blocks overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Building_blocks/conditionals\\\">Making decisions in your code \u2014 Conditionals</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Building_blocks/Looping_code\\\">Looping code</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Building_blocks/Functions\\\">Functions \u2014 Reusable blocks of code</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Building_blocks/Build_your_own_function\\\">Build your own function</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Building_blocks/Return_values\\\">Function return values</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Building_blocks/Events\\\">Introduction to events</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Building_blocks/Image_gallery\\\">Assessment: Image gallery</a></li>\\n          </ol>\\n      </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n      <details>\\n          <summary>Introducing JavaScript objects</summary>\\n          <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Objects\\\">Introducing JavaScript objects overview</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Objects/Basics\\\">Object basics</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Objects/Object-oriented_JS\\\">Object-oriented JavaScript for beginners</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Objects/Object_prototypes\\\">Object prototypes</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Objects/Inheritance\\\">Inheritance in JavaScript</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Objects/JSON\\\">Working with JSON data</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Objects/Object_building_practice\\\">Object building practice</a></li>\\n            <li><a href=\\\"/en-US/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features\\\">Assessment: Adding features to our bouncing balls demo</a></li>\\n          </ol>\\n      </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Asynchronous JavaScript</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Asynchronous\\\">Asynchronous JavaScript overview</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Asynchronous/Concepts\\\">General asynchronous programming concepts</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Asynchronous/Introducing\\\">Introducing asynchronous JavaScript</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Asynchronous/Timeouts_and_intervals\\\">Cooperative asynchronous Java\u200BScript: Timeouts and intervals</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Asynchronous/Promises\\\">Graceful asynchronous programming with Promises</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Asynchronous/Async_await\\\">Making asynchronous programming easier with async and await</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Asynchronous/Choosing_the_right_approach\\\">Choosing the right approach</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Client-side web APIs</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs\\\">Client-side web APIs</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Introduction\\\">Introduction to web APIs</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents\\\">Manipulating documents</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data\\\">Fetching data from the server</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs\\\">Third party APIs</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics\\\">Drawing graphics</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs\\\">Video and audio APIs</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage\\\">Client-side storage</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li><a href=\\\"/en-US/docs/Learn/Forms\\\"><strong>Web forms \u2014 Working with user data</strong></a></li>\\n  <li class=\\\"toggle\\\">\\n    <details open>\\n        <summary>Core forms learning pathway</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms\\\">Web forms overview</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/Your_first_form\\\">Your first form</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/How_to_structure_a_web_form\\\">How to structure a web form</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/Basic_native_form_controls\\\">Basic native form controls</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/HTML5_input_types\\\">The HTML5 input types</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/Other_form_controls\\\">Other form controls</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/Styling_web_forms\\\">Styling web forms</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/Advanced_form_styling\\\">Advanced form styling</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/UI_pseudo-classes\\\">UI pseudo-classes</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/Form_validation\\\">Client-side form validation</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/Sending_and_retrieving_form_data\\\">Sending form data</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details open>\\n        <summary>Advanced forms articles</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/How_to_build_custom_form_controls\\\">How to build custom form controls</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/Sending_forms_through_JavaScript\\\">Sending forms through JavaScript</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_controls\\\">CSS property compatibility table for form controls</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li><a href=\\\"/en-US/docs/Learn/Accessibility\\\"><strong>Accessibility \u2014 Make the web usable by everyone</strong></a></li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Accessibility guides</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Accessibility\\\">Accessibility overview</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Accessibility/What_is_accessibility\\\">What is accessibility?</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Accessibility/HTML\\\">HTML: A good basis for accessibility</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Accessibility/CSS_and_JavaScript\\\">CSS and JavaScript accessibility best practices</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Accessibility/WAI-ARIA_basics\\\">WAI-ARIA basics</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Accessibility/Multimedia\\\">Accessible multimedia</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Accessibility/Mobile\\\">Mobile accessibility</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Accessibility assessment</summary>\\n        <ol>\\n            <li><a href=\\\"/en-US/docs/Learn/Accessibility/Accessibility_troubleshooting\\\">Assessment: Accessibility troubleshooting</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing\\\"><strong>Tools and testing</strong></a></li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Cross browser testing</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing\\\">Cross browser testing overview</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction\\\">Introduction to cross browser testing</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies\\\">Strategies for carrying out testing</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS\\\">Handling common HTML and CSS problems</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript\\\">Handling common JavaScript problems</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility\\\">Handling common accessibility problems</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection\\\">Implementing feature detection</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing\\\">Introduction to automated testing</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment\\\">Setting up your own test automation environment</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Git and GitHub</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/GitHub\\\">Git and GitHub overview</a></li>\\n          <li><a class=\\\"external\\\" href=\\\"https://guides.github.com/activities/hello-world/\\\" rel=\\\"noopener\\\">Hello World</a></li>\\n          <li><a class=\\\"external\\\" href=\\\"https://guides.github.com/introduction/git-handbook/\\\" rel=\\\"noopener\\\">Git Handbook</a></li>\\n          <li><a class=\\\"external\\\" href=\\\"https://guides.github.com/activities/forking/\\\" rel=\\\"noopener\\\">Forking Projects</a></li>\\n          <li><a class=\\\"external\\\" href=\\\"https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests\\\" rel=\\\"noopener\\\">About pull requests</a></li>\\n          <li><a class=\\\"external\\\" href=\\\"https://guides.github.com/features/issues/\\\" rel=\\\"noopener\\\">Mastering Issues</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Understanding client-side web development tools</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools\\\">Client-side web development tools index</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Overview\\\">Client-side tooling overview</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Command_line\\\">Command line crash course</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Package_management\\\">Package management basics</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Introducing_complete_toolchain\\\">Introducing a complete toolchain</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Tools_and_testing/Understanding_client-side_tools/Deployment\\\">Deploying our app</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li data-default-state=\\\"closed\\\"><a href=\\\"/en-US/docs/Learn/Server-side\\\"><strong>Server-side website programming</strong></a></li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>First steps</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/First_steps\\\">First steps overview</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/First_steps/Introduction\\\">Introduction to the server-side</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview\\\">Client-Server overview</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/First_steps/Web_frameworks\\\">Server-side web frameworks</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/First_steps/Website_security\\\">Website security</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Django web framework (Python)</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django\\\">Django web framework (Python) overview</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Introduction\\\">Introduction</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/development_environment\\\">Setting up a development environment</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Tutorial_local_library_website\\\">Tutorial: The Local Library website</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/skeleton_website\\\">Tutorial Part 2: Creating a skeleton website</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Models\\\">Tutorial Part 3: Using models</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Admin_site\\\">Tutorial Part 4: Django admin site</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Home_page\\\">Tutorial Part 5: Creating our home page</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Generic_views\\\">Tutorial Part 6: Generic list and detail views</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Sessions\\\">Tutorial Part 7: Sessions framework</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Authentication\\\">Tutorial Part 8: User authentication and permissions</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Forms\\\">Tutorial Part 9: Working with forms</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Testing\\\">Tutorial Part 10: Testing a Django web application</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/Deployment\\\">Tutorial Part 11: Deploying Django to production</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/web_application_security\\\">Web application security</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Django/django_assessment_blog\\\">Assessment: DIY mini blog</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Express Web Framework (node.js/JavaScript)</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Express_Nodejs\\\">Express Web Framework (Node.js/JavaScript) overview</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Express_Nodejs/Introduction\\\">Express/Node introduction</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Express_Nodejs/development_environment\\\">Setting up a Node (Express) development environment</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website\\\">Express tutorial: The Local Library website</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Express_Nodejs/skeleton_website\\\">Express Tutorial Part 2: Creating a skeleton website</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Express_Nodejs/mongoose\\\">Express Tutorial Part 3: Using a database (with Mongoose)</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Express_Nodejs/routes\\\">Express Tutorial Part 4: Routes and controllers</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data\\\">Express Tutorial Part 5: Displaying library data</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Express_Nodejs/forms\\\">Express Tutorial Part 6: Working with forms</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Server-side/Express_Nodejs/deployment\\\">Express Tutorial Part 7: Deploying to production</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li><a href=\\\"#\\\"><strong>Further resources</strong></a></li>\\n  <li class=\\\"toggle\\\">\\n    <details>\\n        <summary>Common questions</summary>\\n        <ol>\\n          <li><a href=\\\"/en-US/docs/Learn/HTML/Howto\\\">HTML questions</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/CSS/Howto\\\">CSS questions</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/JavaScript/Howto\\\">JavaScript questions</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Common_questions#How_the_Web_works\\\">How the Web works</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Common_questions#Tools_and_setup\\\">Tools and setup</a></li>\\n          <li><a href=\\\"/en-US/docs/Learn/Common_questions#Design_and_accessibility\\\">Design and accessibility</a></li>\\n        </ol>\\n    </details>\\n  </li>\\n  <li data-default-state=\\\"closed\\\"><a href=\\\"/en-US/docs/Learn/How_to_contribute\\\">How to contribute</a></li>\\n</ol>\\n\\n\",\"tocHTML\":\"<li><a href=\\\"#appearance_controlling_OS-level_styling\\\" rel=\\\"internal\\\">appearance: controlling OS-level styling</a><li><a href=\\\"#What_can_be_done_about_the_ugly_elements\\\" rel=\\\"internal\\\">What can be done about the \\\"ugly\\\" elements?</a><li><a href=\\\"#The_road_to_nicer_forms_useful_libraries_and_polyfills\\\" rel=\\\"internal\\\">The road to nicer forms: useful libraries and polyfills</a><li><a href=\\\"#Summary\\\" rel=\\\"internal\\\">Summary</a><li><a href=\\\"#In_this_module\\\" rel=\\\"internal\\\">In this module</a>\",\"raw\":\"<div>{{LearnSidebar}}</div>\\n\\n<div>{{PreviousMenuNext(\\\"Learn/Forms/Styling_web_forms\\\", \\\"Learn/Forms/UI_pseudo-classes\\\", \\\"Learn/Forms\\\")}}</div>\\n\\n<p><span class=\\\"seoSummary\\\">In this article, we will see what can be done with CSS to style the types of form control that are more difficult to style \u2014 the \\\"bad\\\" and \\\"ugly\\\" categories.</span> As we saw <a href=\\\"/en-US/docs/Forms/Styling_web_forms\\\">in the previous article</a>, text fields and buttons are perfectly easy to style; now we will dig into styling the bits that are more problematic.</p>\\n\\n<table class=\\\"learn-box standard-table\\\">\\n\\t<tbody>\\n\\t\\t<tr>\\n\\t\\t\\t<th scope=\\\"row\\\">Prerequisites:</th>\\n\\t\\t\\t<td>Basic computer literacy, and a basic understanding of <a href=\\\"/en-US/docs/Learn/HTML/Introduction_to_HTML\\\">HTML</a> and <a href=\\\"/en-US/docs/Learn/CSS/First_steps\\\">CSS</a>.</td>\\n\\t\\t</tr>\\n\\t\\t<tr>\\n\\t\\t\\t<th scope=\\\"row\\\">Objective:</th>\\n\\t\\t\\t<td>To understand what parts of forms are hard to style, and why; to learn what can be done to customize them.</td>\\n\\t\\t</tr>\\n\\t</tbody>\\n</table>\\n\\n<p>To recap what we said in the previous article, we have:</p>\\n\\n<p><strong>The bad</strong>: Some elements are more difficult to style, requiring more complex CSS or some more specific tricks:</p>\\n\\n<ul>\\n\\t<li>Checkboxes and radio buttons</li>\\n\\t<li><code><a href=\\\"/en-US/docs/Web/HTML/Element/input/search\\\">&lt;input type=\\\"search\\\"&gt;</a></code></li>\\n</ul>\\n\\n<p><strong>The ugly</strong>: Some elements can't be styled thoroughly using CSS. These include:</p>\\n\\n<ul>\\n\\t<li>Elements involved in creating dropdown widgets, including {{HTMLElement(\\\"select\\\")}}, {{HTMLElement(\\\"option\\\")}}, {{HTMLElement(\\\"optgroup\\\")}} and {{HTMLElement(\\\"datalist\\\")}}.</li>\\n\\t<li><code><a href=\\\"/en-US/docs/Web/HTML/Element/input/color\\\">&lt;input type=\\\"color\\\"&gt;</a></code></li>\\n\\t<li>Date-related controls such as <code><a href=\\\"/en-US/docs/Web/HTML/Element/input/datetime-local\\\">&lt;input type=\\\"datetime-local\\\"&gt;</a></code></li>\\n\\t<li><code><a href=\\\"/en-US/docs/Web/HTML/Element/input/range\\\">&lt;input type=\\\"range\\\"&gt;</a></code></li>\\n\\t<li><code><a href=\\\"/en-US/docs/Web/HTML/Element/input/file\\\">&lt;input type=\\\"file\\\"&gt;</a></code></li>\\n\\t<li>{{HTMLElement(\\\"progress\\\")}} and {{HTMLElement(\\\"meter\\\")}}</li>\\n</ul>\\n\\n<p>Let's first talk about the <code><a href=\\\"/en-US/docs/Web/CSS/appearance\\\">appearance</a></code> property, which is pretty useful for making all of the above more stylable.</p>\\n\\n<h2 id=\\\"appearance_controlling_OS-level_styling\\\">appearance: controlling OS-level styling</h2>\\n\\n<p>In the previous article we said that historically, styling of web form controls was largely taken from the underlying operating system, which is part of the problem with customizing the look of these controls.</p>\\n\\n<p>The {{cssxref(\\\"appearance\\\")}} property was created as a way to control what OS- or system-level styling was applied to web form controls. Unfortunately, the behavior of this property's original implementations was very different across browsers, making it not very usable. Newer implementations are more consistent in behavior; interestingly enough, both Chromium-based browsers (Chrome, Opera, Edge), Safari, and Firefox all support the <code>-webkit-</code>\u00A0 prefixed version (<code>-webkit-appearance</code>). Firefox settled on this because web developers mostly seemed to be using the <code>-webkit-</code> prefixed version, so it was better for compatibility.</p>\\n\\n<p>If you look at the reference page you'll see a lot of different possible values listed for <code>-webkit-appearance</code>, however by far the most helpful value, and probably the only one you'll use, is <code>none</code>. This stops any control you apply it to from using system-level styling, as much as possible, and lets you build up the styles yourself using CSS.</p>\\n\\n<p>For example, let's take the following controls:</p>\\n\\n<pre class=\\\"brush: html\\\">&lt;form&gt;\\n  &lt;p&gt;\\n    &lt;label for=\\\"search\\\"&gt;search: &lt;/label&gt;\\n    &lt;input id=\\\"search\\\" name=\\\"search\\\" type=\\\"search\\\"&gt;\\n  &lt;/p&gt;\\n  &lt;p&gt;\\n    &lt;label for=\\\"text\\\"&gt;text: &lt;/label&gt;\\n    &lt;input id=\\\"text\\\" name=\\\"text\\\" type=\\\"text\\\"&gt;\\n  &lt;/p&gt;\\n  &lt;p&gt;\\n    &lt;label for=\\\"date\\\"&gt;date: &lt;/label&gt;\\n    &lt;input id=\\\"date\\\" name=\\\"date\\\" type=\\\"datetime-local\\\"&gt;\\n  &lt;/p&gt;\\n  &lt;p&gt;\\n    &lt;label for=\\\"radio\\\"&gt;radio: &lt;/label&gt;\\n    &lt;input id=\\\"radio\\\" name=\\\"radio\\\" type=\\\"radio\\\"&gt;\\n  &lt;/p&gt;\\n  &lt;p&gt;\\n    &lt;label for=\\\"checkbox\\\"&gt;checkbox: &lt;/label&gt;\\n    &lt;input id=\\\"checkbox\\\" name=\\\"checkbox\\\" type=\\\"checkbox\\\"&gt;\\n  &lt;/p&gt;\\n  &lt;p&gt;&lt;input type=\\\"submit\\\" value=\\\"submit\\\"&gt;&lt;/p&gt;\\n  &lt;p&gt;&lt;input type=\\\"button\\\" value=\\\"button\\\"&gt;&lt;/p&gt;\\n&lt;/form&gt;</pre>\\n\\n<p>Applying the following CSS to them removes system-level styling.</p>\\n\\n<pre class=\\\"brush: css\\\">input {\\n  -webkit-appearance: none; \\n  appearance: none;\\n}</pre>\\n\\n<div class=\\\"blockIndicator note\\\">\\n<p><strong>Note</strong>: It is a good idea to always include both declarations \u2014 prefixed and unprefixed \u2014 when using a prefixed property. Prefixed usually means \\\"work in progress\\\", so in the future browser vendors may come to a consensus to drop the prefix. The above code is good for future-proofing against such an eventuality.</p>\\n</div>\\n\\n<p>The following live example shows you what they look like in your system \u2014 default on the left, and with the above CSS applied on the right (<a href=\\\"https://mdn.github.io/learning-area/html/forms/styling-examples/appearence-tester.html\\\">find it here also</a> if you want to test it on other systems).</p>\\n\\n<p>{{EmbedGHLiveSample(\\\"learning-area/html/forms/styling-examples/appearence-tester.html\\\", '100%', 400)}}</p>\\n\\n<p>In most cases, the effect is to remove the stylized border, which makes CSS styling a bit easier, but isn't really essential. In a couple of cases \u2014 search and radio buttons/checkboxes, it becomes way more useful. We'll look at those now.</p>\\n\\n<h3 id=\\\"Taming_search_boxes\\\">Taming search boxes</h3>\\n\\n<p><code><a href=\\\"/en-US/docs/Web/HTML/Element/input/search\\\">&lt;input type=\\\"search\\\"&gt;</a></code> is basically just a text input, so why is <code>appearance: none;</code> useful here? The answer is that in Chromium-based browsers on macOS, search boxes have some styling restrictions \u2014 you can't adjust their <code>height</code> or <code>font-size</code>\u00A0freely, for example. This is because non-macOS <a href=\\\"https://www.wired.com/2013/04/blink/\\\">Chrome browsers no longer use the WebKit rendering engine</a>, which enabled\u00A0Aqua appearance by default for certain form controls. With\u00A0Aqua enabled, some form controls are not <a href=\\\"https://webkit.org/blog/28/buttons/\\\">scalable</a>.\u00A0</p>\\n\\n<p>This can be fixed using our friend <code>appearance: none;</code>, which disables the default Aqua appearance:</p>\\n\\n<pre class=\\\"brush: css\\\">input[type=\\\"search\\\"] {\\n    -webkit-appearance: none;\\n    appearance: none;\\n}</pre>\\n\\n<p>In the example below, you can see two identical styled search boxes. The right one has <code>appearance: none;</code> applied, and the left one doesn't. If you look at it in macOS Chrome you'll see that the left one isn't sized properly.</p>\\n\\n<p>{{EmbedGHLiveSample(\\\"learning-area/html/forms/styling-examples/search-appearence.html\\\", '100%', 200)}}</p>\\n\\n<p>Interestingly, setting border/background on the search field also fixes this problem, as it <a href=\\\"https://webkit.org/blog/28/buttons/\\\">disables</a> or \\\"breaks\\\" the Aqua appearance too.\u00A0The following styled search doesn't have <code>appearance: none;</code> applied, but it doesn't suffer from the same problem in macOS Chrome as the previous example.</p>\\n\\n<p>{{EmbedGHLiveSample(\\\"learning-area/html/forms/styling-examples/styled-search.html\\\", '100%', 200)}}</p>\\n\\n<div class=\\\"blockIndicator note\\\">\\n<p><strong>Note</strong>: You may have noticed that in the search field, the \\\"x\\\" delete icon disappears when the input loses focus in Edge and Chrome, but stays put in Safari. To remove via CSS, you can use\u00A0<code>input[type=\\\"search\\\"]::-webkit-search-cancel-button { display: none; }</code>. However, this seems to get rid of the icon <em>with</em> focus too, with no apparent\u00A0way to get it back.</p>\\n</div>\\n\\n<h3 id=\\\"Styling_checkboxes_and_radio_buttons\\\">Styling checkboxes and radio buttons</h3>\\n\\n<p>Styling a checkbox or a radio button is tricky by default. The sizes of check boxes and radio buttons are not meant to be changed with their default designs, and browsers react very differently when you try.</p>\\n\\n<p>For example, consider this simple test case:</p>\\n\\n<pre class=\\\"brush: html\\\">&lt;span&gt;&lt;input type=\\\"checkbox\\\"&gt;&lt;/span&gt;</pre>\\n\\n<pre class=\\\"brush: css\\\">span {\\n    display: inline-block;\\n    background: red;\\n}\\n\\ninput[type=\\\"checkbox\\\"] {\\n    width: 100px;\\n    height: 100px;\\n}</pre>\\n\\n<p>Different browsers handle this in many different, often ugly ways:</p>\\n\\n<table>\\n\\t<thead>\\n\\t\\t<tr>\\n\\t\\t\\t<th scope=\\\"col\\\">Browser</th>\\n\\t\\t\\t<th scope=\\\"col\\\">Rendering</th>\\n\\t\\t</tr>\\n\\t</thead>\\n\\t<tbody>\\n\\t\\t<tr>\\n\\t\\t\\t<td>Firefox 71 (macOS)</td>\\n\\t\\t\\t<td><img alt=\\\"\\\" src=\\\"https://mdn.mozillademos.org/files/15671/firefox-mac-checkbox.png\\\" style=\\\"height: 118px; width: 120px;\\\"></td>\\n\\t\\t</tr>\\n\\t\\t<tr>\\n\\t\\t\\t<td>Firefox 57 (Windows 10)</td>\\n\\t\\t\\t<td><img alt=\\\"\\\" src=\\\"https://mdn.mozillademos.org/files/15691/firefox-windows-checkbox.png\\\" style=\\\"height: 115px; width: 113px;\\\"></td>\\n\\t\\t</tr>\\n\\t\\t<tr>\\n\\t\\t\\t<td>Chrome 77 (macOS), Safari 13, Opera</td>\\n\\t\\t\\t<td><img alt=\\\"\\\" src=\\\"https://mdn.mozillademos.org/files/15676/chrome-mac-checkbox.png\\\" style=\\\"height: 117px; width: 116px;\\\"></td>\\n\\t\\t</tr>\\n\\t\\t<tr>\\n\\t\\t\\t<td>Chrome 63 (Windows 10)</td>\\n\\t\\t\\t<td><img alt=\\\"\\\" src=\\\"https://mdn.mozillademos.org/files/15681/chrome-windows-checkbox.png\\\" style=\\\"height: 117px; width: 120px;\\\"></td>\\n\\t\\t</tr>\\n\\t\\t<tr>\\n\\t\\t\\t<td>Internet Explorer 11 (Windows 10)</td>\\n\\t\\t\\t<td><img alt=\\\"\\\" src=\\\"https://mdn.mozillademos.org/files/15696/ie11-checkbox.png\\\" style=\\\"height: 112px; width: 119px;\\\"></td>\\n\\t\\t</tr>\\n\\t\\t<tr>\\n\\t\\t\\t<td>Edge 16 (Windows 10)</td>\\n\\t\\t\\t<td><img alt=\\\"\\\" src=\\\"https://mdn.mozillademos.org/files/15686/edge-checkbox.png\\\" style=\\\"height: 118px; width: 119px;\\\"></td>\\n\\t\\t</tr>\\n\\t</tbody>\\n</table>\\n\\n<h4 id=\\\"Using_appearence_none_on_radioscheckboxes\\\">Using appearence: none on radios/checkboxes</h4>\\n\\n<p>As we showed before, you can remove the default appearance of a checkbox or radio button altogether with {{cssxref('appearance')}}<code>:none;</code> Let's take this example HTML:</p>\\n\\n<pre class=\\\"brush: html\\\">&lt;form&gt;\\n  &lt;fieldset&gt;\\n    &lt;legend&gt;Fruit preferences&lt;/legend&gt;\\n\\n    &lt;p&gt;\\n      &lt;label&gt;\\n        &lt;input type=\\\"checkbox\\\" name=\\\"fruit-1\\\" value=\\\"cherry\\\"&gt;\\n        I like cherry\\n      &lt;/label&gt;\\n    &lt;/p&gt;\\n    &lt;p&gt;\\n      &lt;label&gt;\\n        &lt;input type=\\\"checkbox\\\" name=\\\"fruit-2\\\" value=\\\"banana\\\" disabled&gt;\\n        I can't like banana\\n      &lt;/label&gt;\\n    &lt;/p&gt;\\n    &lt;p&gt;\\n      &lt;label&gt;\\n        &lt;input type=\\\"checkbox\\\" name=\\\"fruit-3\\\" value=\\\"strawberry\\\"&gt;\\n        I like strawberry\\n      &lt;/label&gt;\\n    &lt;/p&gt;\\n  &lt;/fieldset&gt;\\n&lt;/form&gt;</pre>\\n\\n<p>Now, let's style these with a custom checkbox design. Let's start by unstyling the original check boxes:</p>\\n\\n<pre class=\\\"brush: css\\\">input[type=\\\"checkbox\\\"] {\\n  -webkit-appearance: none;\\n  appearance: none;\\n}\\n</pre>\\n\\n<p>We can use the {{cssxref(\\\":checked\\\")}} and {{cssxref(\\\":disabled\\\")}} pseudo-classes to change the appearance of our custom checkbox as its state changes:</p>\\n\\n<pre class=\\\"brush: css\\\">input[type=\\\"checkbox\\\"] {\\n  position: relative;\\n  width: 1em;\\n  height: 1em;\\n  border: 1px solid gray;\\n  /* Adjusts the position of the checkboxes on the text baseline */ \\n  vertical-align: -2px;\\n  /* Set here so that Windows' High-Contrast Mode can override */\\n  color: green;\\n}\\n\\ninput[type=\\\"checkbox\\\"]::before {\\n  content: \\\"\u2714\\\";\\n  position: absolute;\\n  font-size: 1.2em;\\n  right: -1px;\\n  top: -0.3em;\\n  visibility: hidden;\\n}\\n\\ninput[type=\\\"checkbox\\\"]:checked::before {\\n  /* Use `visibility` instead of `display` to avoid recalculating layout */\\n  visibility: visible;\\n}\\n\\ninput[type=\\\"checkbox\\\"]:disabled {\\n  border-color: black;\\n  background: #ddd;\\n  color: gray;\\n}</pre>\\n\\n<p>You'll find more out about such pseudo-classes and more in the <a href=\\\"/en-US/docs/Learn/Forms/UI_pseudo-classes\\\">next article</a>; the above ones do the following:</p>\\n\\n<ul>\\n\\t<li><code>:checked</code> \u2014 the checkbox (or radio button) is in a checked state \u2014 the user has clicked/activated it.</li>\\n\\t<li><code>:disabled</code> \u2014 the checkbox (or radio button) is in a disabled state \u2014 it cannot be interacted with.</li>\\n</ul>\\n\\n<p id=\\\"results\\\">You can see the live result:</p>\\n\\n<p>{{EmbedGHLiveSample(\\\"learning-area/html/forms/styling-examples/checkboxes-styled.html\\\", '100%', 200)}}</p>\\n\\n<p>We've also created a couple of other examples to give you more ideas:</p>\\n\\n<ul>\\n\\t<li><a href=\\\"https://mdn.github.io/learning-area/html/forms/styling-examples/radios-styled.html\\\">Styled radio buttons</a>: Custom radio button styling.</li>\\n\\t<li><a href=\\\"https://mdn.github.io/learning-area/html/forms/toggle-switch-example/\\\">Toggle switch example</a>: A checkbox styled to look like a toggle switch.</li>\\n</ul>\\n\\n<p>If you view these checkboxes in a browser that doesn't support {{cssxref(\\\"appearance\\\")}}, your custom design will be lost, but they will still look like checkboxes and be usable.</p>\\n\\n<div class=\\\"blockIndicator note\\\">\\n<p><strong>Note</strong>: While Internet Explorer doesn't support any version of <code>appearance</code>, the <code>input[type=checkbox]::-ms-check</code> enables the targeting of checkboxes in IE only. This technique works for radio buttons too, despite the name <code>-ms-<em><strong>check</strong></em></code>.</p>\\n</div>\\n\\n<h2 id=\\\"What_can_be_done_about_the_ugly_elements\\\">What can be done about the \\\"ugly\\\" elements?</h2>\\n\\n<p>Now let's turn our attention to the \\\"ugly\\\" controls \u2014 the ones that are really hard to thoroughly\u00A0 style. In short, these are drop-down boxes, complex control types like <code><a href=\\\"/en-US/docs/Web/HTML/Element/input/color\\\">color</a></code> and <code><a href=\\\"/en-US/docs/Web/HTML/Element/input/datetime-local\\\">datetime-local</a></code>, and feedback\u2014oriented controls like {{HTMLElement(\\\"progress\\\")}} and {{HTMLElement(\\\"meter\\\")}}.</p>\\n\\n<p>The problem is that these elements have very different default looks across browsers, and while you can style them in some ways, some parts of their internals are literally impossible to style.</p>\\n\\n<p>If you are prepared to live with some differences in look and feel, you can get away with some simple styling to make sizing consistent, uniform styling of things like background-colors, and usage of appearence to get rid of some system-level styling.</p>\\n\\n<p>Take the following example, which shows a number of the \\\"ugly\\\" form features in action:</p>\\n\\n<p>{{EmbedGHLiveSample(\\\"learning-area/html/forms/styling-examples/ugly-controls.html\\\", '100%', 750)}}</p>\\n\\n<p>This example has the following CSS applied to it:</p>\\n\\n<pre class=\\\"brush: css\\\">body {\\n  font-family: 'Josefin Sans', sans-serif;\\n  margin: 20px auto;\\n  max-width: 400px;\\n}\\n\\nform &gt; div {\\n  margin-bottom: 20px;\\n}\\n\\nselect {\\n  -webkit-appearance: none;\\n  appearance: none;\\n}\\n\\n.select-wrapper {\\n  position: relative;\\n}\\n\\n.select-wrapper::after {\\n  content: \\\"\u25BC\\\";\\n  font-size: 1rem;\\n  top: 6px;\\n  right: 10px;\\n  position: absolute;\\n}\\n\\nbutton, label, input, select, progress, meter {\\n  display: block;\\n  font-family: inherit;\\n  font-size: 100%;\\n  padding: 0;\\n  margin: 0;\\n  box-sizing: border-box;\\n  width: 100%;\\n  padding: 5px;\\n  height: 30px;\\n}\\n\\ninput[type=\\\"text\\\"], input[type=\\\"datetime-local\\\"], input[type=\\\"color\\\"], select {\\n  box-shadow: inset 1px 1px 3px #ccc;\\n  border-radius: 5px;\\n}\\n\\nlabel {\\n  margin-bottom: 5px;\\n}\\n\\nbutton {\\n  width: 60%;\\n  margin: 0 auto;\\n}</pre>\\n\\n<div class=\\\"blockIndicator note\\\">\\n<p><strong>Note</strong>: If you want to test these examples across a number of browsers simultaneously, you can <a href=\\\"https://mdn.github.io/learning-area/html/forms/styling-examples/ugly-controls.html\\\">find it live here</a> (also <a href=\\\"https://github.com/mdn/learning-area/blob/master/html/forms/styling-examples/ugly-controls.html\\\">see here for the source code</a>).</p>\\n\\n<p>Also bear in mind that we've added some JavaScript to the page that lists the files selected by the file picker, below the control itself. This is a simplified version of the example found on the <code><a href=\\\"/en-US/docs/Web/HTML/Element/input/file#Examples\\\">&lt;input type=\\\"file\\\"&gt;</a></code> reference page.</p>\\n</div>\\n\\n<p>As you can see, we've done fairly well at getting these to look uniform across modern browsers.</p>\\n\\n<p>We've applied some global normalizing CSS to all the controls and their labels, to get them to size in the same way, adopt their parent font, etc., as mentioned in the previous article:</p>\\n\\n<pre class=\\\"brush: css\\\">button, label, input, select, progress, meter {\\n  display: block;\\n  font-family: inherit;\\n  font-size: 100%;\\n  padding: 0;\\n  margin: 0;\\n  box-sizing: border-box;\\n  width: 100%;\\n  padding: 5px;\\n  height: 30px;\\n}</pre>\\n\\n<p>We also added some uniform shadow and rounded corners to the controls on which it made sense:</p>\\n\\n<pre class=\\\"brush: css\\\">input[type=\\\"text\\\"], input[type=\\\"datetime-local\\\"], input[type=\\\"color\\\"], select {\\n  box-shadow: inset 1px 1px 3px #ccc;\\n  border-radius: 5px;\\n}</pre>\\n\\n<p>on other controls like range types, progress bars, and meters they just add an ugly box around the control area, so it doesn't make sense.</p>\\n\\n<p>Let's talk about some specifics of each of these types of control, highlighting difficulties along the way.</p>\\n\\n<h3 id=\\\"Selects_and_datalists\\\">Selects and datalists</h3>\\n\\n<p>In modern browsers, selects and datalists are generally not too bad to style provided you don't want to vary the look and feel too much from the defaults.</p>\\n\\n<p>We've managed to get the basic look of the boxes looking pretty uniform and consisent. The datalist control is <code>&lt;input type=\\\"text\\\"&gt;</code> anyway, so we knew this wouldn't be a problem.</p>\\n\\n<p>Two things are slightly more problematic. First of all, the select's \\\"arrow\\\" icon that indicates it is a dropdown differs across browsers. It also tends to change if you increase the size of the select box, or resize in an ugly fashion. To fix this in our example we first used our old friend <code>appearance: none</code> to get rid of the icon altogether:</p>\\n\\n<pre class=\\\"brush: css\\\">select {\\n  -webkit-appearance: none;\\n  appearance: none;\\n}</pre>\\n\\n<p>We then created our own icon using generated content. We put an extra wrapper around the control, because <code><a href=\\\"/en-US/docs/Web/CSS/::before\\\">::before</a></code>/<code><a href=\\\"/en-US/docs/Web/CSS/::after\\\">::after</a></code> don't work on <code>&lt;select&gt;</code> elements (this is because generated content is placed relative to an element's formatting box, but form inputs work more like replaced elements \u2014 their display is generated by the browser and put in place \u2014 and therefore don't have one):</p>\\n\\n<pre class=\\\"brush: html\\\">&lt;div class=\\\"select-wrapper\\\"&gt;&lt;select id=\\\"select\\\" name=\\\"select\\\"&gt;\\n  &lt;option&gt;Banana&lt;/option&gt;\\n  &lt;option&gt;Cherry&lt;/option&gt;\\n  &lt;option&gt;Lemon&lt;/option&gt;\\n&lt;/select&gt;&lt;/div&gt;</pre>\\n\\n<p>We then use generated content to generate a little down arrow, and put it in the right place using positioning:</p>\\n\\n<pre class=\\\"brush: css\\\">.select-wrapper {\\n  position: relative;\\n}\\n\\n.select-wrapper::after {\\n  content: \\\"\u25BC\\\";\\n  font-size: 1rem;\\n  top: 6px;\\n  right: 10px;\\n  position: absolute;\\n}</pre>\\n\\n<p>The second, slightly more major issue is that you don't have control over the box that appears containing the options when you click on the <code>&lt;select&gt;</code> box to open it. You'll notice that the options don't inherit the font set on the parent. You also can't consistently set things like spacing and colors. For example, Firefox will apply <code><a href=\\\"/en-US/docs/Web/CSS/color\\\">color</a></code> and <code><a href=\\\"/en-US/docs/Web/CSS/background-color\\\">background-color</a></code> when set on the <code><a href=\\\"/en-US/docs/Web/HTML/Element/option\\\">&lt;option&gt;</a></code> elements, Chrome won't. Neither of them will apply any kind of spacing (e.g. <code><a href=\\\"/en-US/docs/Web/CSS/padding\\\">padding</a></code>). The same is also true of the autocomplete list that appears for the datalist.</p>\\n\\n<p>If you really need full control over the option styling, you'll have to either use some kind of library to generate a custom control, or build your own custom control, or in the case of select use the <code>multiple</code> attribute, which makes all the options appear on the page, sidestepping this particular problem:</p>\\n\\n<pre class=\\\"brush: html\\\">&lt;select id=\\\"select\\\" name=\\\"select\\\" multiple&gt;\\n  ...\\n&lt;/select&gt;</pre>\\n\\n<p>Of course, this might also not fit in with the design you are going for, but it's worth noting!</p>\\n\\n<h3 id=\\\"Date_input_types\\\">Date input types</h3>\\n\\n<p>The date/time input types (<code><a href=\\\"/en-US/docs/Web/HTML/Element/input/datetime-local\\\">datetime-local</a></code>, <code><a href=\\\"/en-US/docs/Web/HTML/Element/input/time\\\">time</a></code>, <code><a href=\\\"/en-US/docs/Web/HTML/Element/input/week\\\">week</a></code>, <code><a href=\\\"/en-US/docs/Web/HTML/Element/input/month\\\">month</a></code>) all have the same major associated issue. The actual containing box is as easy to style as any text input, and what we've got in this demo looks fine.</p>\\n\\n<p>However, the internal parts of the control (e.g. the popup calendar that you use pick a date, the spinner that you can use to increment/decrement values) are not stylable at all, and you can't get rid of them using <code>appearence: none;</code>. If you really need full control over the styling, you'll have to either use some kind of library to generate a custom control, or build your own.</p>\\n\\n<div class=\\\"blockIndicator note\\\">\\n<p><strong>Note</strong>: It is worth mentioning <code><a href=\\\"/en-US/docs/Web/HTML/Element/input/number\\\">&lt;input type=\\\"number\\\"&gt;</a></code> here too \u2014 this also has a spinner that you can use to increment/decrement values, so potentially suffers from the same problem. However, in the case of the <code>number</code> type the data being collected is simpler, and it is easy to just use a <code>text</code> input type instead if desired (or <code>tel</code> if you want mobile browsers to show the numeric keypad).</p>\\n</div>\\n\\n<h3 id=\\\"Range_input_types\\\">Range input types</h3>\\n\\n<p><code><a href=\\\"/en-US/docs/Web/HTML/Element/input/range\\\">&lt;input type=\\\"range\\\"&gt;</a></code> is annoying to style. You can use something like the following to remove the default slider track completely and replace it with a custom style (a thin red track, in this case):</p>\\n\\n<pre class=\\\"brush: css\\\">input[type=\\\"range\\\"] {\\n  appearance: none;\\n  -webkit-appearance: none;\\n  background: red;\\n  height: 2px;\\n  padding: 0;\\n  outline: 1px solid transparent;\\n}</pre>\\n\\n<p>However, it is very difficult to customize the style of the range control's drag handle \u2014 to get full control over range styling you'll need to use a whole bunch of complex CSS code, including multiple non-standard, browser-specific pseudo-elements. Check out <a href=\\\"https://css-tricks.com/styling-cross-browser-compatible-range-inputs-css/\\\">Styling Cross-Browser Compatible Range Inputs with CSS</a> on CSS tricks for a detailed write up of what's needed.</p>\\n\\n<h3 id=\\\"Color_input_types\\\">Color input types</h3>\\n\\n<p>Input controls of type color are not too bad. In supporting browsers, they tend to just give you a block of solid color with a small border.</p>\\n\\n<p>You can remove the border, just leaving the block of color, using something like this:</p>\\n\\n<pre class=\\\"brush: css\\\">input[type=\\\"color\\\"] {\\n  border: 0;\\n  padding: 0;\\n}</pre>\\n\\n<p>However, a custom solution is the only way to get anything significantly different.</p>\\n\\n<h3 id=\\\"File_input_types\\\">File input types</h3>\\n\\n<p>Inputs of type file are generally OK \u2014 as you saw in our example, it is fairly easy to create something that fits in OK with the rest of the page \u2014 the output line that is part of the control will inherit the parent font if you tell the input to do so, and you can style the custom list of file names and sizes in any way you want; we created it after all.</p>\\n\\n<p>The only problem with file pickers is that the button provided that you press to open the file picker is completely unstyleable \u2014 it can't be sized or colored, and it won't even accept a different font.</p>\\n\\n<p>One way around this is to take advantage of the fact that if you have a label associated with a form control, clicking the label will activate the control. So you could hide the actual from input using something like this:</p>\\n\\n<pre class=\\\"brush: css\\\">input[type=\\\"file\\\"] {\\n  height: 0;\\n  padding: 0;\\n  opacity: 0;\\n}</pre>\\n\\n<p>And then style the label to act like a button, which when pressed will open the file picker as expected:</p>\\n\\n<pre class=\\\"brush: css\\\">label[for=\\\"file\\\"] {\\n  box-shadow: 1px 1px 3px #ccc;\\n  background: linear-gradient(to bottom, #eee, #ccc);\\n  border: 1px solid rgb(169, 169, 169);\\n  border-radius: 5px;\\n  text-align: center;\\n  line-height: 1.5;\\n}\\n\\nlabel[for=\\\"file\\\"]:hover {\\n  background: linear-gradient(to bottom, #fff, #ddd);\\n}\\n\\nlabel[for=\\\"file\\\"]:active {\\n  box-shadow: inset 1px 1px 3px #ccc;\\n}</pre>\\n\\n<p>You can see the result of the above CSS styling in the below live example (see also <a href=\\\"https://mdn.github.io/learning-area/html/forms/styling-examples/styled-file-picker.html\\\">styled-file-picker.html</a> live, and the <a href=\\\"/enhttps://github.com/mdn/learning-area/blob/master/html/forms/styling-examples/styled-file-picker.html-US/docs/\\\">source code</a>).</p>\\n\\n<p>{{EmbedGHLiveSample(\\\"learning-area/html/forms/styling-examples/styled-file-picker.html\\\", '100%', 200)}}</p>\\n\\n<h3 id=\\\"Meters_and_progress_bars\\\">Meters and progress bars</h3>\\n\\n<p><code><a href=\\\"/en-US/docs/Web/HTML/Element/meter\\\">&lt;meter&gt;</a></code> and <code><a href=\\\"/en-US/docs/Web/HTML/Element/progress\\\">&lt;progress&gt;</a></code> are possibly the worst of the lot. As you saw in the earlier example, we can set them to a desired width relatively accurately. But beyond that, they are really difficult to style in any way. They don't handle height settings consistently between each other and between browsers, you can color the background, but not the foreground bar, and setting <code>appearance: none</code> on them makes things worse, not better.</p>\\n\\n<p>It is easier to just create your own custom solution for these features, if you want to be able to control the styling, or use a third party colution such as <a href=\\\"http://kimmobrunfeldt.github.io/progressbar.js/#examples\\\">progressbar.js</a>.</p>\\n\\n<h2 id=\\\"The_road_to_nicer_forms_useful_libraries_and_polyfills\\\">The road to nicer forms: useful libraries and polyfills</h2>\\n\\n<p>As we've mentioned above a few times, if you want to gain full control over the \\\"ugly\\\" control types, you have no choice but to rely on JavaScript. In the article <a href=\\\"/en-US/docs/Learn/Forms/How_to_build_custom_form_controls\\\">How to build custom form controls</a> you will see how to do it on your own, but there are some very useful libraries out there that can help you:</p>\\n\\n<ul>\\n\\t<li><a href=\\\"http://sprawsm.com/uni-form/\\\" rel=\\\"external\\\">Uni-form</a> is a framework that standardizes form markup, styling it with CSS. It also offers a few additional features when used with jQuery, but that's optional.</li>\\n\\t<li><a href=\\\"http://formalize.me/\\\" rel=\\\"external\\\">Formalize</a> is an extension to common JavaScript frameworks (such as jQuery, Dojo, YUI, etc.) that helps to normalize and customize your forms.</li>\\n\\t<li><a href=\\\"http://www.emblematiq.com/lab/niceforms/\\\" rel=\\\"external\\\">Niceforms</a> is a standalone JavaScript method that provides complete customization of web forms. You can use some of the built in themes, or create your own.</li>\\n</ul>\\n\\n<p>The following libraries aren't just about forms, but they have very interesting features for dealing with HTML forms:</p>\\n\\n<ul>\\n\\t<li><a href=\\\"http://jqueryui.com/\\\" rel=\\\"external\\\">jQuery UI</a> offers customizable widgets such as date pickers (with special attention given to accessibility).</li>\\n\\t<li><a href=\\\"http://twitter.github.com/bootstrap/base-css.html#forms\\\" rel=\\\"external\\\">Twitter Bootstrap</a> can help normalize your forms.</li>\\n\\t<li><a href=\\\"https://afarkas.github.io/webshim/demos/\\\" rel=\\\"external\\\">WebShim</a> is a huge tool that can help you deal with browser HTML5 support. The web forms part can be really helpful.</li>\\n</ul>\\n\\n<p>Remember that CSS and JavaScript can have side effects. So if you choose to use one of those libraries, you should always have robust fallback HTML in case the script fails. There are many reasons why scripts may fail, especially in the mobile world, and you need to design your Web site or app to handle these cases as best as possible.</p>\\n\\n<h2 id=\\\"Summary\\\">Summary</h2>\\n\\n<p>While there are still difficulties using CSS with HTML forms, there are ways to get around many of the problems. There are no clean, universal solutions, but modern browsers offer new possibilities. For now, the best solution is to learn more about the way the different browsers support CSS when applied to HTML form controls.</p>\\n\\n<p>In the next article of this module, we will explore the different <a href=\\\"/en-US/docs/Learn/Forms/UI_pseudo-classes\\\">UI pseudo-classes</a> available to us in modern browsers for styling forms in different states.</p>\\n\\n<p>{{PreviousMenuNext(\\\"Learn/Forms/Styling_web_forms\\\", \\\"Learn/Forms/UI_pseudo-classes\\\", \\\"Learn/Forms\\\")}}</p>\\n\\n<h2 id=\\\"In_this_module\\\">In this module</h2>\\n\\n<ul>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/Your_first_form\\\">Your first form</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/How_to_structure_a_web_form\\\">How to structure a web form</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/Basic_native_form_controls\\\">Basic native form controls</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/HTML5_input_types\\\">The HTML5 input types</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/Other_form_controls\\\">Other form controls</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/Styling_web_forms\\\">Styling web forms</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/Advanced_form_styling\\\">Advanced form styling</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/UI_pseudo-classes\\\">UI pseudo-classes</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/Form_validation\\\">Client-side form validation</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/Sending_and_retrieving_form_data\\\">Sending form data</a></li>\\n</ul>\\n\\n<h3 id=\\\"Advanced_Topics\\\">Advanced Topics</h3>\\n\\n<ul>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/How_to_build_custom_form_controls\\\">How to build custom form controls</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/Sending_forms_through_JavaScript\\\">Sending forms through JavaScript</a></li>\\n\\t<li><a href=\\\"/en-US/docs/Learn/Forms/Property_compatibility_table_for_form_widgets\\\">Property compatibility table for form widgets</a></li>\\n</ul>\",\"parents\":[{\"url\":\"/en-US/docs/Learn\",\"title\":\"Learn web development\"},{\"url\":\"/en-US/docs/Learn/Forms\",\"title\":\"Web forms \u2014 Working with user data\"}],\"translations\":[{\"language\":\"Fran\u00E7ais\",\"hrefLang\":\"fr\",\"localizedLanguage\":\"French\",\"locale\":\"fr\",\"url\":\"/fr/docs/Web/Guide/HTML/Formulaires/Advanced_styling_for_HTML_forms\",\"title\":\"Composition avanc\u00E9e des formulaires HTML\"},{\"language\":\"\u65E5\u672C\u8A9E\",\"hrefLang\":\"ja\",\"localizedLanguage\":\"Japanese\",\"locale\":\"ja\",\"url\":\"/ja/docs/Learn/HTML/Forms/Advanced_styling_for_HTML_forms\",\"title\":\"HTML \u30D5\u30A9\u30FC\u30E0\u3078\u306E\u9AD8\u5EA6\u306A\u30B9\u30BF\u30A4\u30EB\u8A2D\u5B9A\"},{\"language\":\"Nederlands\",\"hrefLang\":\"nl\",\"localizedLanguage\":\"Dutch\",\"locale\":\"nl\",\"url\":\"/nl/docs/Learn/HTML/Forms/Geavanceerde_styling_van_HTML-formulieren\",\"title\":\"Geavanceerde styling van HTML-formulieren\"},{\"language\":\"\u4E2D\u6587 (\u7B80\u4F53)\",\"hrefLang\":\"zh\",\"localizedLanguage\":\"Chinese (Simplified)\",\"locale\":\"zh-CN\",\"url\":\"/zh-CN/docs/Learn/HTML/Forms/Advanced_styling_for_HTML_forms\",\"title\":\"\u9AD8\u7EA7\u8BBE\u8BA1 HTML \u8868\u5355\"}],\"lastModified\":\"2020-04-30T23:03:37.171748\"}}");</script>


  
    <div id="auth-modal" class="modal hidden">
    <section class="auth-providers" tabindex="-1" role="dialog" aria-modal="true"
        aria-labelledby="modal-main-heading">
        <header>
            <h2 id="modal-main-heading">Sign In</h2>
        </header>
        
  <p>
    Sign in to enjoy the benefits of an MDN account. If you haven’t already created an account, you will be prompted to do so after signing in.
</p>
<div class="auth-button-container">
    <a href="/users/github/login/?next=%2Fen-US%2Fdocs%2FLearn%2FForms%2FAdvanced_form_styling" class="github-auth" data-first-focusable="true">
        Sign in with Github
    </a>
    <a href="/users/google/login/?next=%2Fen-US%2Fdocs%2FLearn%2FForms%2FAdvanced_form_styling" class="google-auth">
        Sign in with Google
    </a>
</div>

        <button id="close-modal" class="close-modal" data-last-focusable="true">
            <span>Close modal</span>
        </button>
    </section>
</div>
  

  <!-- site js -->
  <script defer type="text/javascript" src="/static/build/js/react-main.a0d686444539.js" charset="utf-8"></script>
  <script defer type="text/javascript" src="/static/build/js/mathml.3cb4c04c0706.js" charset="utf-8"></script>
  <script defer type="text/javascript" src="/static/build/js/auth-modal.119e5d70465f.js" charset="utf-8"></script>
  
    <script defer type="text/javascript" src="/static/build/js/react-bcd-signal.0124e23c0b7b.js" charset="utf-8"></script>
  
</body>
</html>